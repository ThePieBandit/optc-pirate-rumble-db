{"version":3,"file":"ngx-store.js","sources":["../../../projects/ngx-store/src/lib/config/config.helper.ts","../../../projects/ngx-store/src/lib/config/config.ts","../../../projects/ngx-store/src/lib/decorator/cache.ts","../../../projects/ngx-store/src/lib/utility/storage/storage-event.ts","../../../projects/ngx-store/src/lib/service/resource.ts","../../../projects/ngx-store/src/lib/service/webstorage.service.ts","../../../projects/ngx-store/src/lib/utility/webstorage.utility.ts","../../../projects/ngx-store/src/lib/utility/storage/storage.ts","../../../projects/ngx-store/src/lib/utility/storage/cookies-storage.ts","../../../projects/ngx-store/src/lib/utility/shared-storage.utility.ts","../../../projects/ngx-store/src/lib/utility/storage/shared-storage.ts","../../../projects/ngx-store/src/lib/utility/index.ts","../../../projects/ngx-store/src/lib/service/local-storage.service.ts","../../../projects/ngx-store/src/lib/service/session-storage.service.ts","../../../projects/ngx-store/src/lib/service/cookies-storage.service.ts","../../../projects/ngx-store/src/lib/service/shared-storage.service.ts","../../../projects/ngx-store/src/lib/decorator/webstorage.ts","../../../projects/ngx-store/src/lib/ngx-store.module.ts","../../../projects/ngx-store/src/public-api.ts","../../../projects/ngx-store/src/ngx-store.ts"],"sourcesContent":["export const CONFIG_PREFIX = 'NGX-STORE_';\n\nexport class ConfigHelper {\n  public static getItem(key: string): any {\n    return localStorage.getItem(CONFIG_PREFIX + key);\n  }\n\n  public static setItem(key: string, item: any): void {\n    return localStorage.setItem(CONFIG_PREFIX + key, item);\n  }\n}\n","import { WebStorageConfigInterface } from './config.interface';\nimport { ConfigHelper } from './config.helper';\nimport { Debugger } from 'ts-debug';\n\n// TODO allow to set different config for local and session storage\n// TODO check if NGXSTORE_CONFIG implements WebStorageConfigInterface\n// TODO allow to set configuration in node-config (`config` on npm)\n\nexport { CONFIG_PREFIX } from './config.helper';\n\nconst DefaultConfig: WebStorageConfigInterface = {\n  prefix: 'ngx_',\n  previousPrefix: 'angular2ws_',\n  clearType: 'prefix',\n  mutateObjects: true,\n  cookiesScope: '',\n  cookiesCheckInterval: 0,\n  debugMode: false,\n};\n\n// take configuration provided as a global variable\ndeclare const NGXSTORE_CONFIG: WebStorageConfigInterface;\n\nlet ConfigFills: WebStorageConfigInterface = {};\nconst localStoragePrefix = ConfigHelper.getItem('prefix');\n\nif (typeof NGXSTORE_CONFIG === 'object') {\n  ConfigFills = Object.assign({}, NGXSTORE_CONFIG);\n}\n\nif (localStoragePrefix !== undefined && localStoragePrefix !== null) {\n  ConfigFills.previousPrefix = localStoragePrefix;\n} else if (ConfigFills.previousPrefix === undefined) {\n  ConfigFills.previousPrefix = DefaultConfig.previousPrefix;\n}\n\n// merge default config, deprecated config and global config all together\nexport const Config: WebStorageConfigInterface =\n  Object.assign({}, DefaultConfig, ConfigFills);\n\nexport const debug = new Debugger(console, Config.debugMode, '[ngx-store] ');\nConfigHelper.setItem('prefix', Config.prefix);\n","import { Config, debug } from '../config/config';\nimport { CacheItemInterface, UtilityEntry } from './cache.interface';\nimport { WebStorageServiceInterface } from '../service/webstorage.interface';\nimport { DecoratorConfig } from '../ngx-store.types';\nimport { WebStorageUtility } from '../utility/webstorage.utility';\n\nconst isEqual = require('lodash.isequal');\n\nexport class Cache {\n  public static items: Map<string, CacheItem> = new Map();\n\n  public static getCacheFor(cacheCandidate: CacheItemInterface): CacheItem {\n    let cacheItem = Cache.get(cacheCandidate.key);\n    if (!cacheItem) {\n      cacheItem = new CacheItem(cacheCandidate);\n      debug.log(`Created new CacheItem for ${cacheCandidate.name} for ${cacheItem.utilities[0].utility.getStorageName()}`);\n      Cache.set(cacheItem);\n      return cacheItem;\n    }\n    debug.log(`Loaded prior CacheItem of ${cacheItem.name}\n     for ${cacheCandidate.utilities[0].utility.getStorageName()}`);\n    cacheItem.addTargets(cacheCandidate.targets);\n    cacheItem.addServices(cacheCandidate.services);\n    cacheItem.addUtilities(cacheCandidate.utilities);\n    Cache.set(cacheItem);\n    return cacheItem;\n  }\n\n  public static remove(cacheItem: CacheItem): boolean {\n    return Cache.items.delete(cacheItem.key);\n  }\n\n  public static get(key: string): CacheItem {\n    return Cache.items.get(key) as CacheItem;\n  }\n\n  protected static set(cacheItem: CacheItem): void {\n    if (!Cache.get(cacheItem.key)) {\n      debug.log('CacheItem for ' + cacheItem.key, cacheItem);\n    }\n    Cache.items.set(cacheItem.key, cacheItem);\n  }\n}\n\n// tslint:disable:only-arrow-functions\nexport class CacheItem implements CacheItemInterface {\n  public name: string = '';\n  public targets: Array<object> = [];\n  public services: Array<WebStorageServiceInterface> = [];\n  public utilities: Array<UtilityEntry> = [];\n  public currentTarget: object = {};\n  protected proxy: any = null;\n  protected _key: string = '';\n  protected initializedTargets: Set<object> = new Set();\n\n  constructor(cacheItem: CacheItemInterface) {\n    this._key = cacheItem.key;\n    this.name = cacheItem.name;\n    this.addTargets(cacheItem.targets);\n    this.addServices(cacheItem.services);\n    this.addUtilities(cacheItem.utilities);\n  }\n\n  public get key(): string {\n    return this._key;\n  }\n\n  public saveValue(value: any, config: DecoratorConfig = {}): any {\n    debug.groupCollapsed('CacheItem#saveValue for ' + this.key + ' in ' + this.currentTarget.constructor.name);\n    debug.log('new value: ', value);\n    // if (value === false && this.readValue() === true) debugger;\n    debug.log('previous value: ', this.readValue());\n    debug.log('targets.length: ', this.targets.length);\n    debug.log('currentTarget:', this.currentTarget);\n    debug.groupEnd();\n\n    // prevent overwriting value by initializators\n    if (!this.initializedTargets.has(this.currentTarget)) {\n      this.initializedTargets.add(this.currentTarget);\n      let readValue = this.readValue();\n      if (config.migrateKey) {\n        this.migrate(config, this.utilities[0].utility);\n        readValue = this.readValue();\n      }\n      const savedValue = (readValue !== null && readValue !== undefined) ? readValue : value;\n      let proxy = this.getProxy(savedValue, config);\n      proxy = (proxy !== null) ? proxy : value;\n      debug.log('initial value for ' + this.key + ' in ' + this.currentTarget.constructor.name, proxy);\n      this.propagateChange(savedValue);\n      return proxy;\n    }\n    this.propagateChange(value);\n    return this.getProxy(value, config);\n  }\n\n  public getProxy(value?: any, config: DecoratorConfig = {}): any {\n    if (value === undefined && this.proxy) {\n      return this.proxy;\n    } // return cached proxy if value hasn't changed\n    value = (value === undefined) ? this.readValue() : value;\n    if (typeof value !== 'object' || value === null) {\n      this.proxy = value;\n      return value;\n    }\n    if ((!Config.mutateObjects && !config.mutate) || config.mutate === false) {\n      return value;\n    }\n\n    const _self = this; // alias to use in standard function expressions\n    const prototype: any = Object.assign(new value.constructor(), value.__proto__);\n\n    prototype.save = function(): void { // add method for triggering force save\n      _self.saveValue(value, config);\n    };\n\n    // TODO set prototype for Array.prototype or something\n    if (Array.isArray(value)) { // handle methods that could change value of array\n      const methodsToOverwrite = [\n        'pop', 'push', 'reverse', 'shift', 'unshift', 'splice',\n        'filter', 'forEach', 'map', 'fill', 'sort', 'copyWithin',\n      ];\n      for (const method of methodsToOverwrite) {\n        prototype[method] = function(): void {\n          const readValue = _self.readValue();\n          // @ts-ignore\n          const result = Array.prototype[method].apply(readValue, arguments);\n          debug.log('Saving value for ' + _self.key + ' by method '\n            + prototype.constructor.name + '.' + method);\n          _self.saveValue(readValue, config);\n          return result;\n        };\n      }\n    }\n    Object.setPrototypeOf(value, prototype);\n    this.proxy = value;\n    return value;\n  }\n\n  public readValue(config: DecoratorConfig = {}): any {\n    const entry = this.utilities[0];\n    const value = entry ? entry.utility.get(this.key, entry.config) : null;\n    return (typeof value !== 'object') ? value : JSON.parse(JSON.stringify(this.getProxy(value, entry.config)));\n  }\n\n  public addTargets(targets: Array<any>): void {\n    targets.forEach(target => {\n      if (this.targets.indexOf(target) === -1) {\n        if (typeof target === 'object') { // handle Angular Component destruction\n          const originalFunction = target.ngOnDestroy;\n          const _self = this;\n          target.ngOnDestroy = function(): any {\n            if (typeof originalFunction === 'function') {\n              originalFunction.apply(this, arguments);\n            }\n            target.ngOnDestroy = originalFunction || function(): any {};\n\n            _self.initializedTargets.delete(target);\n            _self.targets = _self.targets.filter(t => t !== target);\n            if (!_self.targets.length) {\n              _self.services.forEach(service => {\n                service.keys = service.keys.filter(key => key !== _self._key);\n              });\n              _self.resetProxy();\n              Cache.remove(_self);\n            }\n            debug.groupCollapsed(`${_self.key} OnDestroy handler:`);\n            debug.log('removed target:', target.constructor.name);\n            debug.log('remaining targets:', _self.targets);\n            debug.log('cacheItem:', Cache.get(_self.key));\n            debug.groupEnd();\n          };\n          this.targets.push(target);\n        }\n      }\n    });\n  }\n\n  public addServices(services: Array<WebStorageServiceInterface>): void {\n    services.forEach(service => {\n      if (this.services.indexOf(service) === -1) {\n        service.keys.push(this._key);\n        this.services.push(service);\n      }\n    });\n  }\n\n  public addUtilities(utilityEntries: Array<UtilityEntry>): void {\n    utilityEntries.forEach(entry => {\n      if (this.utilities.findIndex(e => e.utility === entry.utility) === -1) {\n        this.utilities.push(entry);\n        entry.utility.set(this.key, this.readValue());\n      }\n    });\n  }\n\n  public resetProxy(): void {\n    this.proxy = null;\n  }\n\n  public propagateChange(value: any, source?: WebStorageUtility): void {\n    if (isEqual(value, this.readValue())) {\n      return;\n    }\n    this.utilities.forEach(entry => {\n      const utility = entry.utility;\n      // updating service which the change came from would affect in a cycle\n      if (utility === source) {\n        return;\n      }\n      debug.log(`propagating change on ${this.key} to:`, utility);\n      utility.set(this._key, value, entry.config);\n    });\n  }\n\n  protected migrate(config: DecoratorConfig, utility: WebStorageUtility): void {\n    const prefix = (config.prefix || Config.prefix) || '';\n    const keyExists = (key: string): boolean => key in utility.getStorage();\n    const migrateKey = keyExists(prefix + config.migrateKey!)\n      ? prefix + config.migrateKey!\n      : config.migrateKey!;\n    if (!keyExists(migrateKey)) {\n      return;\n    }\n    debug.log('Migrating', migrateKey, 'to', config.key, 'in', utility.getStorageName());\n    const value = utility.get(migrateKey, {...config, prefix: ''});\n    utility.set(this._key, value);\n    utility.remove(migrateKey, {prefix: ''});\n  }\n}\n","export class NgxStorageEvent<T = any> implements Omit<StorageEvent, 'oldValue' | 'newValue'> {\n  protected static initTimeStamp = Date.now();\n  public oldValue!: T;\n  public newValue!: T;\n  public NONE: any;\n  public timeStamp = (Date.now() - NgxStorageEvent.initTimeStamp);\n  public readonly bubbles = false;\n  public readonly cancelBubble = false;\n  public readonly cancelable = false;\n  public readonly composed = false;\n  public readonly currentTarget = window;\n  public readonly defaultPrevented = false;\n  public readonly eventPhase = 2;\n  public readonly isTrusted = true;\n  public readonly path = [window];\n  public readonly returnValue = true;\n  public readonly srcElement = window as any;\n  public readonly target = window;\n  public readonly url = window.location.href;\n  public isInternal = true;\n\n  constructor(public type: string, public key: string, public storageArea: Storage) {\n  }\n\n  /**\n   * Methods below exist only to satisfy TypeScript compiler\n   */\n  // tslint:disable:typedef\n  public get initEvent() {\n    return StorageEvent.prototype.initEvent.bind(this);\n  }\n\n  public get preventDefault() {\n    return StorageEvent.prototype.preventDefault.bind(this);\n  }\n\n  public get stopImmediatePropagation() {\n    return StorageEvent.prototype.stopImmediatePropagation.bind(this);\n  }\n\n  public get stopPropagation() {\n    return StorageEvent.prototype.stopPropagation.bind(this);\n  }\n\n  public get composedPath() {\n    return StorageEvent.prototype.composedPath.bind(this);\n  }\n\n  public get AT_TARGET() {\n    return StorageEvent.prototype.AT_TARGET;\n  }\n\n  public get BUBBLING_PHASE() {\n    return StorageEvent.prototype.BUBBLING_PHASE;\n  }\n\n  public get CAPTURING_PHASE() {\n    return StorageEvent.prototype.BUBBLING_PHASE;\n  }\n}\n","import { WebStorageService } from './webstorage.service';\nimport { Config } from '../config/config';\n\nconst _get = require('lodash.get');\nconst _set = require('lodash.set');\nconst _merge = require('lodash.merge');\n\nexport class Resource<T> {\n  constructor(protected service: WebStorageService, protected readonly key: string) {\n  }\n\n  protected _defaultValue: any = null;\n\n  /**\n   * Returns default value\n   * @returns {T}\n   */\n  public get defaultValue(): T {\n    return this._defaultValue;\n  }\n\n  protected _path: Array<string> = [];\n\n  /**\n   * Returns current path as a string\n   * @returns {string}\n   */\n  public get path(): string {\n    return this.pathString;\n  }\n\n  protected _prefix = Config.prefix;\n\n  /**\n   * Returns currently set prefix\n   * @returns {string}\n   */\n  public get prefix(): string {\n    return this._prefix || '';\n  }\n\n  /**\n   * Returns value taking path into account\n   * @returns {T}\n   */\n  public get value(): T {\n    return this.considerDefault(this.readValue());\n  }\n\n  protected get fullValue(): T {\n    return this.considerDefault(this.service.utility.get(this.key, {prefix: this._prefix}));\n  }\n\n  protected get pathString(): string {\n    return this._path.join('.');\n  }\n\n  /**\n   * Sets path of object property\n   * @param {string} path\n   * @returns {this}\n   */\n  public setPath(path: string): this {\n    this._path = path.split('.');\n    return this;\n  }\n\n  /**\n   * Appends current path\n   * e.g. if path('key') and appendPath('nested'), the path will be \"key.nested\"\n   * @param {string} path\n   * @returns {this}\n   */\n  public appendPath(path: string): this {\n    this._path.push(path);\n    return this;\n  }\n\n  /**\n   * Removes last item of path\n   * e.g. if path('key.nested') and truncatePath(), the path will be \"key\"\n   * @returns {this}\n   */\n  public truncatePath(): this {\n    this._path.pop();\n    return this;\n  }\n\n  /**\n   * Resets set path\n   * @returns {this}\n   */\n  public resetPath(): this {\n    this._path = [];\n    return this;\n  }\n\n  /**\n   * Sets prefix\n   * @param {string} prefix\n   * @returns {this}\n   */\n  public setPrefix(prefix: string): this {\n    this._prefix = prefix;\n    return this;\n  }\n\n  /**\n   * Moves storage item to new key using given prefix\n   * @param {string} prefix\n   * @returns {this}\n   */\n  public changePrefix(prefix: string): this {\n    this.service.utility.set(this.key, this.fullValue, {prefix});\n    this.service.utility.remove(this.key, {prefix: this._prefix});\n    return this.setPrefix(prefix);\n  }\n\n  /**\n   * Sets default value for both reading and saving operations\n   * @param defaultValue\n   * @returns {this}\n   */\n  public setDefaultValue(defaultValue: T): this {\n    this._defaultValue = defaultValue;\n    const value = this.readValue();\n    if (this.isNullOrUndefined(value)) {\n      this.save(defaultValue);\n    }\n    return this;\n  }\n\n  /**\n   * Creates or overrides value as a new entry or existing object property depending on path\n   * @param value\n   * @returns {this}\n   */\n  public save(value: T): this {\n    if (this.pathString) {\n      value = _set(this.fullValue as any as object, this.pathString, this.considerDefault(value)) as any as T;\n    }\n    this.service.utility.set(this.key, this.considerDefault(value), {prefix: this._prefix});\n    return this;\n  }\n\n  /**\n   * Updates existing object property using current path\n   * @param {T} value\n   * @returns {this}\n   */\n  public update(value: T): this {\n    return this.save(_merge(this.readValue(), value));\n  }\n\n  /**\n   * Removes item stored under current key\n   * @returns {this}\n   */\n  public remove(): this {\n    this.service.utility.remove(this.key);\n    return this;\n  }\n\n  protected considerDefault<S>(value: S): S {\n    return this.isNullOrUndefined(value) ? this._defaultValue : value;\n  }\n\n  protected isNullOrUndefined(value: any): boolean {\n    return (value === null || value === undefined);\n  }\n\n  protected readValue(): T {\n    const value = this.service.utility.get(this.key, {prefix: this._prefix});\n    if (this.pathString) {\n      return _get(value, this.pathString);\n    }\n    return value;\n  }\n}\n","import { Config, debug } from '../config/config';\nimport { ClearType, WebStorageConfigInterface } from '../config/config.interface';\nimport { WebStorageUtility } from '../utility/webstorage.utility';\nimport { WebStorageServiceInterface } from './webstorage.interface';\nimport { Cache } from '../decorator/cache';\nimport { Observable } from 'rxjs';\nimport { delay, filter } from 'rxjs/operators';\nimport { NgxStorageEvent } from '../utility/storage/storage-event';\nimport { Resource } from './resource';\nimport merge from 'lodash.merge';\n\n// const merge = require('lodash.merge');\n\nexport abstract class WebStorageService {\n  public static keys: Array<string> = [];\n  // @ts-ignore\n  protected _changes: Observable<NgxStorageEvent>;\n\n  protected constructor(public utility: WebStorageUtility) {\n  }\n\n  /**\n   * Gets keys for stored variables created by ngx-store,\n   * ignores keys that have not been created by decorators and have no prefix at once\n   */\n  public get keys(): Array<string> {\n    // get prefixed key if prefix is defined\n    const prefixKeys = this.utility.keys.filter(key => {\n      if (this.utility.prefix && this.utility.prefix.length) {\n        return key.startsWith(this.utility.prefix);\n      }\n      return true;\n    });\n    const decoratorKeys = (this.constructor as WebStorageServiceInterface).keys;\n    return prefixKeys.concat(decoratorKeys);\n  }\n\n  public get config(): WebStorageConfigInterface {\n    return Config;\n  }\n\n  public get(key: string): any {\n    return this.utility.get(key);\n  }\n\n  /**\n   * Returns new data Resource for given key exposing builder design pattern\n   * designed for complex nested data structures\n   */\n  public load(key: string): Resource<any> {\n    return new Resource(this, key);\n  }\n\n  public set<T>(key: string, value: T): T {\n    return this.utility.set(key, value) as T;\n  }\n\n  public update(key: string, changes: any): any {\n    const value = this.get(key);\n    if (value !== undefined && typeof value !== 'object') {\n      debug.throw(new Error(`Value stored under \"${key}\" key is not an object and tried to be updated.`));\n      return value;\n    }\n    return this.set(key, merge({}, value, changes));\n  }\n\n  // TODO return true if item existed and false otherwise (?)\n  public remove(key: string): void {\n    return this.utility.remove(key);\n  }\n\n  public observe(key?: string, exactMatch?: boolean): Observable<NgxStorageEvent> {\n    return this._changes.pipe(\n      filter((event: NgxStorageEvent) => {\n        if (!key) {\n          return true;\n        }\n        if (exactMatch) {\n          if (Config.prefix && key.startsWith(Config.prefix)) {\n            return event.key === key;\n          }\n          return event.key === Config.prefix + key;\n        } else {\n          return event.key?.indexOf(key) !== -1;\n        }\n      }),\n      delay(30), // event should come after actual data change and propagation\n    );\n  }\n\n  /**\n   * Clears chosen data from Storage\n   * @param clearType 'prefix' | 'decorators' | 'all'\n   * @param prefixOrClass defines the prefix or class (not its instance) whose decorators should be cleared\n   */\n  public clear(clearType?: ClearType, prefixOrClass?: string | object): void {\n    clearType = clearType || Config.clearType;\n    if (clearType === 'decorators') {\n      let keys = [];\n      if (typeof prefixOrClass === 'object') {\n        keys = this.keys.filter(key => Cache.get(key).targets.includes(prefixOrClass as object));\n        debug.log(this.utility.getStorageName() + ' > Removing decorated data from '\n          + prefixOrClass.constructor.name + ':', keys);\n      } else {\n        keys = this.keys;\n        debug.log(this.utility.getStorageName() + ' > Removing decorated data:', keys);\n      }\n      keys.forEach(key => this.remove(key));\n    } else if (clearType === 'prefix') {\n      prefixOrClass = prefixOrClass || this.utility.prefix;\n      this.utility.forEach((value, key) => {\n        if (key.startsWith(prefixOrClass as string)) {\n          this.remove(this.utility.trimPrefix(key));\n        }\n      });\n    } else if (clearType === 'all') {\n      this.utility.clear();\n    }\n  }\n\n  protected generateEvent(key: string, newValue: any, oldValue?: any): NgxStorageEvent {\n    const type = this.utility.getStorageName().charAt(0).toLowerCase() + this.utility.getStorageName().slice(1);\n    const event = new NgxStorageEvent(type, key, this.utility.getStorage());\n    event.oldValue = (oldValue !== undefined) ? oldValue : this.get(key);\n    event.newValue = newValue;\n    return event;\n  }\n\n  protected mapNativeEvent(ev: StorageEvent): NgxStorageEvent {\n    const event = this.generateEvent(\n      ev.key as string,\n      this.utility.getGettable(ev.newValue as string),\n      this.utility.getGettable(ev.oldValue as string));\n    event.isInternal = false;\n    return event;\n  }\n}\n","import { DecoratorConfig } from '../ngx-store.types';\nimport { WebStorage } from './storage/cookies-storage';\nimport { Cache } from '../decorator/cache';\nimport { CONFIG_PREFIX, debug } from '../config/config';\nimport { Observable, Subject } from 'rxjs';\nimport { NgxStorageEvent } from './storage/storage-event';\n\nexport type StorageName = 'localStorage' | 'sessionStorage' | 'cookiesStorage' | 'sharedStorage';\n\nexport class WebStorageUtility {\n  protected _storage: WebStorage;\n\n  public constructor(storage: WebStorage, prefix: string = '', previousPrefix?: string) {\n    this._storage = storage;\n    this._prefix = prefix;\n\n    // handle previousPrefix for backward-compatibility and safe config changes below\n    if (prefix === previousPrefix) {\n      return;\n    }\n    if (previousPrefix === null) {\n      return;\n    }\n    if (previousPrefix === undefined) {\n      return;\n    }\n    debug.log(this.getStorageName() + ' > Detected prefix change from ' + previousPrefix + ' to ' + prefix);\n    this.forEach((value, key) => {\n      // ignore config settings when previousPrefix = ''\n      if (key.startsWith(previousPrefix) && !key.startsWith(CONFIG_PREFIX)) {\n        const nameWithoutPrefix = this.trimPrefix(key);\n        this.set(nameWithoutPrefix, this._storage.getItem(key));\n\n        if (previousPrefix !== '') {\n          this._storage.removeItem(key);\n        }\n      }\n    });\n  }\n\n  protected _prefix: string = '';\n\n  public get prefix(): string {\n    return this._prefix;\n  }\n\n  protected _changes: Subject<NgxStorageEvent> = new Subject();\n\n  public get changes(): Observable<NgxStorageEvent> {\n    return this._changes.asObservable();\n  }\n\n  public get keys(): Array<string> {\n    const keys: Array<string> = [];\n    this.forEach((value, key) => keys.push(key));\n    return keys;\n  }\n\n  public static getSettable(value: any): string {\n    return JSON.stringify(value);\n  }\n\n  public static getGettable(value: string): any {\n    if (value === 'undefined') {\n      return null;\n    }\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      return value;\n    }\n  }\n\n  public getStorage(): WebStorage {\n    return this._storage;\n  }\n\n  public getStorageKey(key: string, prefix?: string): string {\n    prefix = (typeof prefix === 'string') ? prefix : this.prefix;\n    return `${prefix}${key}`;\n  }\n\n  public getStorageName(): StorageName {\n    return this._storage.type || ((this._storage === localStorage) ? 'localStorage' : 'sessionStorage');\n  }\n\n  public get(key: string, config: DecoratorConfig = {}): any {\n    const storageKey = this.getStorageKey(key, config.prefix);\n    const value = this._storage.getItem(storageKey);\n    // TODO return undefined if no key\n    /*if (value === null && !(storageKey in this._storage)) {\n      return undefined;\n    }*/\n    return this.getGettable(value as string);\n  }\n\n  public set<T>(key: string, value: T, config: DecoratorConfig = {}): T | null {\n    if (value === null || value === undefined) {\n      this.remove(key);\n      return null;\n    }\n    try {\n      const storageKey = this.getStorageKey(key, config.prefix);\n      const storable = this.getSettable(value);\n      this.emitEvent(key, value);\n      this._storage.setItem(storageKey, storable, config.expires);\n      const cacheItem = Cache.get(key);\n      if (cacheItem) {\n        debug.log(`updating following CacheItem from ${this.constructor.name}:`, cacheItem);\n        cacheItem.resetProxy();\n        cacheItem.propagateChange(value, this);\n      }\n    } catch (error) {\n      console.warn(`[ngx-store] ${this.getStorageName()}:\n             following error occurred while trying to save ${key} =`, value);\n      console.error(error);\n    }\n    return value;\n  }\n\n  // TODO return true if item existed and false otherwise (?)\n  public remove(key: string, config: DecoratorConfig = {}): void {\n    const storageKey = this.getStorageKey(key, config.prefix);\n    this._storage.removeItem(storageKey);\n    const cacheItem = Cache.get(key);\n    if (cacheItem) {\n      cacheItem.resetProxy();\n    }\n  }\n\n  public clear(): void {\n    this.emitEvent(null as any, null, null);\n    this.forEach((value, key) => {\n      if (key.startsWith(CONFIG_PREFIX)) {\n        return;\n      }\n      this.remove(key, {prefix: ''});\n    });\n  }\n\n  public forEach(callbackFn: (value: any, key: string) => any): void {\n    if (typeof this._storage.forEach === 'function') {\n      return this._storage.forEach((value: any, key: string) => {\n        callbackFn(this.getGettable(value), key);\n      });\n    }\n    Object.keys(this._storage).forEach((key) => {\n      callbackFn(this.getGettable(this._storage[key]), key);\n    });\n  }\n\n  public getSettable(value: any): string {\n    return WebStorageUtility.getSettable(value);\n  }\n\n  public getGettable(value: string): any {\n    return WebStorageUtility.getGettable(value);\n  }\n\n  public trimPrefix(key: string): string {\n    return key.replace(this.prefix, '');\n  }\n\n  protected emitEvent(key: string, newValue: any, oldValue?: any): void {\n    const event = new NgxStorageEvent(this.getStorageName(), key, this._storage);\n    event.oldValue = (oldValue !== undefined) ? oldValue : this.get(key);\n    event.newValue = newValue;\n    this._changes.next(event);\n  }\n}\n","import { NgxStorageEvent } from './storage-event';\nimport { Subject } from 'rxjs';\nimport { StorageName } from '../webstorage.utility';\n\n// TODO: in the future use ES6 Proxy to handle indexers\nexport abstract class NgxStorage implements Storage {\n  [key: string]: any;\n  [index: number]: string;\n  public externalChanges?: Subject<NgxStorageEvent> = new Subject();\n  public abstract setItem(key: string, value: any): void;\n  public abstract removeItem(key: string): void;\n  public abstract getItem(key: string): any;\n  public abstract key(index: number): any;\n  public abstract clear(): void;\n  public abstract get length(): number;\n  public abstract get type(): StorageName;\n\n  protected emitEvent(key: string, newValue: any, oldValue?: any): void {\n    const event = new NgxStorageEvent(this.type, key, this);\n    event.oldValue = (oldValue !== undefined) ? oldValue : this.getItem(key);\n    event.newValue = newValue;\n    event.isInternal = false;\n    this.externalChanges?.next(event);\n  }\n}\n","import { Config, debug } from '../../config/config';\nimport { NgxStorage } from './storage';\nimport { StorageName, WebStorageUtility } from '../webstorage.utility';\nimport { interval } from 'rxjs';\n\nexport interface WebStorage extends Storage {\n  setItem(key: string, data: string, expirationDate?: Date): void;\n}\n\nexport class CookiesStorage extends NgxStorage {\n  protected cachedCookieString: string = '';\n  protected cachedItemsMap: Map<string, string> = new Map();\n\n  constructor() {\n    super();\n    this.getAllItems();\n    if (Config.cookiesCheckInterval) {\n      interval(Config.cookiesCheckInterval)\n        .subscribe(() => {\n          if (!this.externalChanges?.observers.length) {\n            return; // don't run if there are no set subscriptions\n          }\n          this.getAllItems();\n        });\n    }\n  }\n\n  public get type(): StorageName {\n    return 'cookiesStorage';\n  }\n\n  public get length(): number {\n    return this.getAllKeys().length;\n  }\n\n  public key(index: number): string | any {\n    return this.getAllKeys()[index];\n  }\n\n  public getItem(key: string): string | any {\n    return this.getAllItems().get(key);\n  }\n\n  public removeItem(key: string): void {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    let domain = this.resolveDomain(Config.cookiesScope);\n    domain = (domain) ? 'domain=' + domain + ';' : '';\n    document.cookie = key + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/;' + domain;\n    this.cachedItemsMap.delete(key);\n  }\n\n  /**\n   * @param key\n   * @param value\n   * @param expirationDate passing null affects in lifetime cookie\n   */\n  public setItem(key: string, value: string, expirationDate?: Date): void {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    let domain = this.resolveDomain(Config.cookiesScope);\n    debug.log('Cookies domain:', domain);\n    domain = (domain) ? 'domain=' + domain + ';' : '';\n    let utcDate = '';\n    if (expirationDate instanceof Date) {\n      utcDate = expirationDate.toUTCString();\n    } else if (expirationDate === null) {\n      utcDate = 'Fri, 18 Dec 2099 12:00:00 GMT';\n    }\n    const expires = utcDate ? '; expires=' + utcDate : '';\n    const cookie = key + '=' + value + expires + ';path=/;' + domain;\n    debug.log('Cookie`s set instruction:', cookie);\n    this.cachedItemsMap.set(key, value);\n    document.cookie = cookie;\n  }\n\n  public clear(): void {\n    this.getAllKeys().forEach(key => this.removeItem(key));\n  }\n\n  public forEach(callbackFn: (value: string, key: string) => any): void {\n    return this.getAllItems().forEach((value, key) => callbackFn(value, key));\n  }\n\n  protected getAllKeys(): Array<string> {\n    return Array.from(this.getAllItems().keys());\n  }\n\n  // TODO: consider getting cookies from all paths\n  protected getAllItems(): Map<string, string> {\n    if (this.cachedCookieString === document.cookie) { // No changes\n      return this.cachedItemsMap;\n    }\n    const map = new Map();\n    if (typeof document === 'undefined') {\n      return map;\n    }\n    const cookies = document.cookie.split(';');\n\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      const eqPos = cookie.indexOf('=');\n      const key = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      const value = eqPos > -1 ? cookie.substr(eqPos + 1, cookie.length) : cookie;\n      map.set(key, value);\n    }\n    // detect changes and emit events\n    if (this.cachedItemsMap) {\n      map.forEach((value, key) => {\n        let cachedValue: any = this.cachedItemsMap.get(key);\n        cachedValue = (cachedValue !== undefined) ? cachedValue : null;\n        if (value !== cachedValue) {\n          this.emitEvent(\n            key,\n            WebStorageUtility.getGettable(value),\n            WebStorageUtility.getGettable(cachedValue),\n          );\n        }\n      });\n      this.cachedItemsMap.forEach((value, key) => {\n        if (!map.has(key)) {\n          this.emitEvent(key, null, WebStorageUtility.getGettable(value));\n        }\n      });\n    }\n    this.cachedCookieString = document.cookie;\n    return this.cachedItemsMap = map;\n  }\n\n  /**\n   * domain.com         + path=\".\"          = .domain.com\n   * domain.com         + path=\".sub.\"      = .sub.domain.com\n   * sub.domain.com     + path=\"sub.\"       = sub.domain.com\n   * www.sub.domain.com + path=\".\"          = .sub.domain.com\n   * localhost          + path=\".whatever.\" = localhost\n   * @param path\n   */\n  protected resolveDomain(path?: string): string {\n    if (!path) {\n      return '';\n    }\n    const hostname = document.domain;\n    if ((hostname.match(/\\./g) || []).length < 1) {\n      return '';\n    }\n    const www = (path[0] !== '.' && hostname.indexOf('www.') === 0) ? 'www.' : '';\n    return www + path + this.getDomain();\n  }\n\n  /**\n   * This function determines base domain by setting cookie at the highest level possible\n   * @url http://rossscrivener.co.uk/blog/javascript-get-domain-exclude-subdomain\n   */\n  protected getDomain(): string {\n    let i = 0;\n    let domain = document.domain;\n    const domainParts = domain.split('.');\n    const s = '_gd' + (new Date()).getTime();\n    while (i < (domainParts.length - 1) && document.cookie.indexOf(s + '=' + s) === -1) {\n      domain = domainParts.slice(-1 - (++i)).join('.');\n      document.cookie = s + '=' + s + ';domain=' + domain + ';';\n    }\n    document.cookie = s + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + domain + ';';\n    return domain;\n  }\n}\n\nexport const cookiesStorage = new CookiesStorage();\n","import { WebStorageUtility } from './webstorage.utility';\n\nexport class SharedStorageUtility extends WebStorageUtility {\n  public getSettable(value: any): any {\n    return value;\n  }\n\n  public getGettable(value: any): any {\n    return value;\n  }\n}\n","import { NgxStorage } from './storage';\nimport { StorageName } from '../webstorage.utility';\n\nexport class SharedStorage extends NgxStorage {\n  protected sharedMap: Map<string, any> = new Map();\n\n  constructor() {\n    super();\n    delete this.externalChanges;\n  }\n\n  public get type(): StorageName {\n    return 'sharedStorage';\n  }\n\n  public get length(): number {\n    return this.getAllKeys().length;\n  }\n\n  public key(index: number): string | any {\n    return this.getAllKeys()[index];\n  }\n\n  public getItem(key: string): any {\n    const value = this.sharedMap.get(key);\n    return (value !== undefined) ? value : null;\n  }\n\n  public removeItem(key: string): void {\n    this.sharedMap.delete(key);\n  }\n\n  public setItem(key: string, value: any): void {\n    this.sharedMap.set(key, value);\n  }\n\n  public clear(): void {\n    this.sharedMap.clear();\n  }\n\n  public forEach(func: (value: string, key: any) => any): void {\n    return this.sharedMap.forEach((value, key) => func(value, key));\n  }\n\n  protected getAllKeys(): Array<string> {\n    return Array.from(this.sharedMap.keys());\n  }\n}\n\nexport const sharedStorage = new SharedStorage();\n","import { Config } from '../config/config';\nimport { WebStorageUtility } from './webstorage.utility';\nimport { cookiesStorage } from './storage/cookies-storage';\nimport { SharedStorageUtility } from './shared-storage.utility';\nimport { sharedStorage } from './storage/shared-storage';\n\nexport const localStorageUtility: WebStorageUtility =\n  new WebStorageUtility(localStorage, Config.prefix, Config.previousPrefix);\nexport const sessionStorageUtility: WebStorageUtility =\n  new WebStorageUtility(sessionStorage, Config.prefix, Config.previousPrefix);\nexport const cookiesStorageUtility: WebStorageUtility =\n  new WebStorageUtility(cookiesStorage, Config.prefix, Config.previousPrefix);\nexport const sharedStorageUtility: SharedStorageUtility =\n  new SharedStorageUtility(sharedStorage, Config.prefix, Config.prefix);\n","import { WebStorageService } from './webstorage.service';\nimport { localStorageUtility } from '../utility/index';\nimport { Injectable } from '@angular/core';\nimport { fromEvent, merge } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { NgxStorageEvent } from '../utility/storage/storage-event';\n\n@Injectable()\nexport class LocalStorageService extends WebStorageService {\n  public static keys: Array<string> = [];\n\n  constructor() {\n    super(localStorageUtility);\n    this._changes =\n      merge(fromEvent<NgxStorageEvent>(window, 'storage')\n          .pipe(\n            filter((event: NgxStorageEvent) => event.storageArea === localStorage),\n            map((event: NgxStorageEvent) => this.mapNativeEvent(event)),\n          ),\n        localStorageUtility.changes);\n  }\n}\n","import { WebStorageService } from './webstorage.service';\nimport { sessionStorageUtility } from '../utility/index';\nimport { Injectable } from '@angular/core';\nimport { fromEvent, merge } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { NgxStorageEvent } from '../utility/storage/storage-event';\n\n@Injectable()\nexport class SessionStorageService extends WebStorageService {\n  public static keys: Array<string> = [];\n\n  constructor() {\n    super(sessionStorageUtility);\n    this._changes =\n      merge(fromEvent<NgxStorageEvent>(window, 'storage')\n          .pipe(\n            filter((event: NgxStorageEvent) => event.storageArea === sessionStorage),\n            map((event: NgxStorageEvent) => this.mapNativeEvent(event)),\n          ),\n        sessionStorageUtility.changes);\n  }\n}\n","import { cookiesStorage } from '../utility/storage/cookies-storage';\nimport { WebStorageService } from './webstorage.service';\nimport { cookiesStorageUtility } from '../utility';\nimport { merge } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookiesStorageService extends WebStorageService {\n  public static keys: Array<string> = [];\n\n  constructor() {\n    super(cookiesStorageUtility);\n    this._changes = !cookiesStorage.externalChanges ? cookiesStorageUtility.changes\n      : merge(cookiesStorage.externalChanges?.asObservable(), cookiesStorageUtility.changes);\n  }\n\n  public set<T>(key: string, value: T, expirationDate?: Date): T {\n    return this.utility.set(key, value, {expires: expirationDate}) as T;\n  }\n}\n","import { WebStorageService } from './webstorage.service';\nimport { sharedStorageUtility } from '../utility';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SharedStorageService extends WebStorageService {\n  public static keys: Array<string> = [];\n\n  constructor() {\n    super(sharedStorageUtility);\n    this._changes = sharedStorageUtility.changes;\n  }\n}\n","// tslint:disable:only-arrow-functions\nimport { LocalStorageService } from '../service/local-storage.service';\nimport { SessionStorageService } from '../service/session-storage.service';\nimport { CookiesStorageService } from '../service/cookies-storage.service';\nimport { WebStorageServiceInterface } from '../service/webstorage.interface';\nimport { cookiesStorageUtility, localStorageUtility, sessionStorageUtility, sharedStorageUtility } from '../utility';\nimport { SharedStorageService } from '../service/shared-storage.service';\nimport { WebStorageUtility } from '../utility/webstorage.utility';\nimport { Cache } from './cache';\nimport {\n  CookieStorageDecoratorConfig,\n  DecoratorConfig,\n  LocalStorageDecoratorConfig,\n  SessionStorageDecoratorConfig,\n  WebStorageDecoratorConfig,\n} from '../ngx-store.types';\n\nexport type DecoratorReturn = (target: any, propertyName: string) => void;\n\nexport function LocalStorage(keyOrConfig?: string | LocalStorageDecoratorConfig,\n                             config?: LocalStorageDecoratorConfig): DecoratorReturn {\n  return WebStorage(localStorageUtility, LocalStorageService, keyOrConfig!, config);\n}\n\nexport function SessionStorage(keyOrConfig?: string | SessionStorageDecoratorConfig,\n                               config?: SessionStorageDecoratorConfig): DecoratorReturn {\n  return WebStorage(sessionStorageUtility, SessionStorageService, keyOrConfig!, config);\n}\n\nexport function CookieStorage(keyOrConfig?: string | CookieStorageDecoratorConfig,\n                              config?: CookieStorageDecoratorConfig): DecoratorReturn {\n  return WebStorage(cookiesStorageUtility, CookiesStorageService, keyOrConfig!, config);\n}\n\nexport function SharedStorage(keyOrConfig?: string | WebStorageDecoratorConfig,\n                              config?: WebStorageDecoratorConfig): DecoratorReturn {\n  return WebStorage(sharedStorageUtility, SharedStorageService, keyOrConfig!, config);\n}\n\nfunction WebStorage(\n  webStorageUtility: WebStorageUtility,\n  service: WebStorageServiceInterface,\n  keyOrConfig: string | DecoratorConfig,\n  config: DecoratorConfig = {},\n): DecoratorReturn {\n  return (target: any, propertyName: string): void => {\n    let key: string = '';\n    if (typeof keyOrConfig === 'object') {\n      key = keyOrConfig.key || '';\n      config = keyOrConfig;\n    } else if (typeof keyOrConfig === 'string') {\n      key = keyOrConfig;\n    }\n    key = key || config.key || propertyName;\n\n    let cacheItem = Cache.getCacheFor({\n      key,\n      name: propertyName,\n      targets: [target],\n      services: [service],\n      utilities: [{\n        utility: webStorageUtility,\n        config,\n      }],\n    });\n\n    Object.defineProperty(target, propertyName, {\n      get: function(): any { // tslint:disable-line\n        return cacheItem.getProxy(undefined, config);\n      },\n      set: function(value: any): void { // tslint:disable-line\n        if (!Cache.get(cacheItem.key)) {\n          cacheItem = Cache.getCacheFor(cacheItem);\n        }\n        cacheItem.addTargets([target]);\n        cacheItem.currentTarget = target;\n        cacheItem.saveValue(value, config);\n      },\n      configurable: true,\n    });\n    return target;\n  };\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { LocalStorageService } from './service/local-storage.service';\nimport { SessionStorageService } from './service/session-storage.service';\nimport { CookiesStorageService } from './service/cookies-storage.service';\nimport { SharedStorageService } from './service/shared-storage.service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    LocalStorageService,\n    SessionStorageService,\n    CookiesStorageService,\n    SharedStorageService,\n  ],\n})\nexport class NgxStoreModule {\n  // methods for future use\n  public static forRoot(): ModuleWithProviders<NgxStoreModule> {\n    return {\n      ngModule: NgxStoreModule,\n    };\n  }\n\n  public static forChild(): typeof NgxStoreModule {\n    return NgxStoreModule;\n  }\n}\n","/*\n * Public API Surface of ngx-store\n */\n\n// Public classes.\nexport {\n  CookieStorage, LocalStorage, SessionStorage, SharedStorage, SharedStorage as TempStorage,\n} from './lib/decorator/webstorage';\nexport { WebStorageService } from './lib/service/webstorage.service';\nexport {\n  CookiesStorageService, CookiesStorageService as CookieStorageService,\n} from './lib/service/cookies-storage.service';\nexport { SharedStorageService, SharedStorageService as TempStorageService } from './lib/service/shared-storage.service';\nexport { LocalStorageService } from './lib/service/local-storage.service';\nexport { SessionStorageService } from './lib/service/session-storage.service';\nexport { WebStorageConfigInterface } from './lib/config/config.interface';\nexport { Webstorable, WebstorableArray, WebstorableObject } from './lib/ngx-store.types';\nexport { NgxStorageEvent } from './lib/utility/storage/storage-event';\nexport { Resource as NgxResource } from './lib/service/resource';\nexport { NgxStoreModule, NgxStoreModule as WebStorageModule } from './lib/ngx-store.module';\nexport * from './lib/ngx-store.types';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {WebStorage as ɵb} from './lib/utility/storage/cookies-storage';\nexport {WebStorageUtility as ɵa} from './lib/utility/webstorage.utility';"],"names":["merge","SharedStorage"],"mappings":"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"}