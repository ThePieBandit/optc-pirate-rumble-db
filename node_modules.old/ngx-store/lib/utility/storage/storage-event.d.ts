export declare class NgxStorageEvent<T = any> implements Omit<StorageEvent, 'oldValue' | 'newValue'> {
    type: string;
    key: string;
    storageArea: Storage;
    protected static initTimeStamp: number;
    oldValue: T;
    newValue: T;
    NONE: any;
    timeStamp: number;
    readonly bubbles = false;
    readonly cancelBubble = false;
    readonly cancelable = false;
    readonly composed = false;
    readonly currentTarget: Window & typeof globalThis;
    readonly defaultPrevented = false;
    readonly eventPhase = 2;
    readonly isTrusted = true;
    readonly path: (Window & typeof globalThis)[];
    readonly returnValue = true;
    readonly srcElement: any;
    readonly target: Window & typeof globalThis;
    readonly url: string;
    isInternal: boolean;
    constructor(type: string, key: string, storageArea: Storage);
    /**
     * Methods below exist only to satisfy TypeScript compiler
     */
    get initEvent(): (type: string, bubbles?: boolean, cancelable?: boolean) => void;
    get preventDefault(): () => void;
    get stopImmediatePropagation(): () => void;
    get stopPropagation(): () => void;
    get composedPath(): () => EventTarget[];
    get AT_TARGET(): number;
    get BUBBLING_PHASE(): number;
    get CAPTURING_PHASE(): number;
}
