{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-store/src/lib/config/config.helper.ts","../../../projects/ngx-store/src/lib/config/config.ts","../../../projects/ngx-store/src/lib/decorator/cache.ts","../../../projects/ngx-store/src/lib/utility/storage/storage-event.ts","../../../projects/ngx-store/src/lib/service/resource.ts","../../../projects/ngx-store/src/lib/service/webstorage.service.ts","../../../projects/ngx-store/src/lib/utility/webstorage.utility.ts","../../../projects/ngx-store/src/lib/utility/storage/storage.ts","../../../projects/ngx-store/src/lib/utility/storage/cookies-storage.ts","../../../projects/ngx-store/src/lib/utility/shared-storage.utility.ts","../../../projects/ngx-store/src/lib/utility/storage/shared-storage.ts","../../../projects/ngx-store/src/lib/utility/index.ts","../../../projects/ngx-store/src/lib/service/local-storage.service.ts","../../../projects/ngx-store/src/lib/service/session-storage.service.ts","../../../projects/ngx-store/src/lib/service/cookies-storage.service.ts","../../../projects/ngx-store/src/lib/service/shared-storage.service.ts","../../../projects/ngx-store/src/lib/decorator/webstorage.ts","../../../projects/ngx-store/src/lib/ngx-store.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__values","o","s","Symbol","iterator","m","i","length","next","value","done","CONFIG_PREFIX","ConfigHelper","getItem","key","localStorage","setItem","item","DefaultConfig","prefix","previousPrefix","clearType","mutateObjects","cookiesScope","cookiesCheckInterval","debugMode","ConfigFills","localStoragePrefix","NGXSTORE_CONFIG","assign","undefined","Config","debug","Debugger","console","isEqual","require","Cache","getCacheFor","cacheCandidate","cacheItem","get","log","name","utilities","utility","getStorageName","addTargets","targets","addServices","services","addUtilities","set","CacheItem","remove","items","delete","Map","currentTarget","proxy","_key","initializedTargets","Set","defineProperty","saveValue","config","groupCollapsed","readValue","groupEnd","has","add","migrateKey","migrate","savedValue","getProxy","propagateChange","mutate","_self","save","isArray","method","result","apply","arguments","methodsToOverwrite_1","methodsToOverwrite_1_1","entry","JSON","parse","stringify","_this","forEach","target","indexOf","originalFunction_1","ngOnDestroy","_self_1","filter","t","service","keys","resetProxy","push","utilityEntries","findIndex","e","source","keyExists","getStorage","NgxStorageEvent","type","storageArea","timeStamp","Date","now","initTimeStamp","bubbles","cancelBubble","cancelable","composed","window","defaultPrevented","eventPhase","isTrusted","path","returnValue","srcElement","url","location","href","isInternal","StorageEvent","initEvent","bind","preventDefault","stopImmediatePropagation","stopPropagation","composedPath","AT_TARGET","BUBBLING_PHASE","_get","_set","_merge","Resource","_defaultValue","_path","_prefix","pathString","considerDefault","join","setPath","split","appendPath","truncatePath","pop","resetPath","setPrefix","changePrefix","fullValue","setDefaultValue","defaultValue","isNullOrUndefined","update","WebStorageService","prefixKeys","startsWith","decoratorKeys","concat","load","changes","throw","Error","merge","observe","exactMatch","_changes","pipe","event","_a","delay","clear","prefixOrClass","includes","trimPrefix","generateEvent","newValue","oldValue","charAt","toLowerCase","slice","mapNativeEvent","ev","getGettable","WebStorageUtility","storage","Subject","_storage","nameWithoutPrefix","removeItem","asObservable","getSettable","getStorageKey","storageKey","storable","emitEvent","expires","error","warn","callbackFn","replace","NgxStorage","externalChanges","cookiesStorage","_super","CookiesStorage","cachedCookieString","cachedItemsMap","getAllItems","interval","subscribe","observers","getAllKeys","index","document","domain","resolveDomain","cookie","expirationDate","utcDate","toUTCString","from","map","cookies","trim","eqPos","substr","cachedValue","hostname","match","getDomain","domainParts","getTime","SharedStorageUtility","sharedStorage","SharedStorage","sharedMap","func","localStorageUtility","sessionStorageUtility","sessionStorage","cookiesStorageUtility","sharedStorageUtility","LocalStorageService","fromEvent","Injectable","SessionStorageService","CookiesStorageService","SharedStorageService","keyOrConfig","WebStorage","webStorageUtility","propertyName","configurable","NgxStoreModule","forRoot","ngModule","forChild","NgModule","args","declarations","imports","exports","providers"],"mappings":"kkBAgBIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,MAC3EN,EAAGC;;;;;;;;;;;;;;6FAGZS,EAAUV,EAAGC,GACzB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIU,UAAU,uBAAyBC,OAAOX,GAAK,iCAE7D,SAASY,IAAOC,KAAKC,YAAcf,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOc,OAAOf,IAAMY,EAAGN,UAAYN,EAAEM,UAAW,IAAIM,GA+EtDX,OAAOc,gBAYpBC,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBA,OAAOC,SAAUC,EAAIH,GAAKD,EAAEC,GAAII,EAAI,EAC5E,GAAID,EAAG,OAAOA,EAAEb,KAAKS,GACrB,GAAIA,GAAyB,iBAAbA,EAAEM,OAAqB,MAAO,CAC1CC,KAAM,WAEF,OADIP,GAAKK,GAAKL,EAAEM,SAAQN,OAAI,GACrB,CAAEQ,MAAOR,GAAKA,EAAEK,KAAMI,MAAOT,KAG5C,MAAM,IAAIP,UAAUQ,EAAI,0BAA4B,mCA6E/BjB,OAAOc,OC7MzB,IAAMY,EAAgB,aAE7BC,EAAA,WAAA,SAAAA,YACgBA,EAAAC,QAAP,SAAeC,GACpB,OAAOC,aAAaF,QAAQF,EAAgBG,IAGhCF,EAAAI,QAAP,SAAeF,EAAaG,GACjC,OAAOF,aAAaC,QAAQL,EAAgBG,EAAKG,MANrD,GCQMC,EAA2C,CAC/CC,OAAQ,OACRC,eAAgB,cAChBC,UAAW,SACXC,eAAe,EACfC,aAAc,GACdC,qBAAsB,EACtBC,WAAW,GAMTC,EAAyC,GACvCC,EAAqBf,EAAaC,QAAQ,UAEjB,iBAApBe,kBACTF,EAAczC,OAAO4C,OAAO,GAAID,kBAG9BD,MAAAA,EACFD,EAAYN,eAAiBO,OACWG,IAA/BJ,EAAYN,iBACrBM,EAAYN,eAAiBF,EAAcE,gBAItC,IAAMW,EACX9C,OAAO4C,OAAO,GAAIX,EAAeQ,GAEtBM,EAAQ,IAAIC,EAAAA,SAASC,QAASH,EAAON,UAAW,gBAC7Db,EAAaI,QAAQ,SAAUe,EAAOZ,QCnCtC,IAAMgB,EAAUC,QAAQ,kBAExBC,EAAA,WAAA,SAAAA,YAGgBA,EAAAC,YAAP,SAAmBC,GACxB,IAAIC,EAAYH,EAAMI,IAAIF,EAAezB,KACzC,OAAK0B,GAMLR,EAAMU,IAAI,6BAA6BF,EAAUG,KAAI,cAC9CJ,EAAeK,UAAU,GAAGC,QAAQC,kBAC3CN,EAAUO,WAAWR,EAAeS,SACpCR,EAAUS,YAAYV,EAAeW,UACrCV,EAAUW,aAAaZ,EAAeK,WACtCP,EAAMe,IAAIZ,GACHA,IAXLA,EAAY,IAAIa,EAAUd,GAC1BP,EAAMU,IAAI,6BAA6BH,EAAeI,KAAI,QAAQH,EAAUI,UAAU,GAAGC,QAAQC,kBACjGT,EAAMe,IAAIZ,GACHA,IAWGH,EAAAiB,OAAP,SAAcd,GACnB,OAAOH,EAAMkB,MAAMC,OAAOhB,EAAU1B,MAGxBuB,EAAAI,IAAP,SAAW3B,GAChB,OAAOuB,EAAMkB,MAAMd,IAAI3B,IAGRuB,EAAAe,IAAP,SAAWZ,GACdH,EAAMI,IAAID,EAAU1B,MACvBkB,EAAMU,IAAI,iBAAmBF,EAAU1B,IAAK0B,GAE9CH,EAAMkB,MAAMH,IAAIZ,EAAU1B,IAAK0B,MAhCnC,GACgBH,EAAAkB,MAAgC,IAAIE,IAoCpD,IAAAJ,EAAA,WAUE,SAAAA,EAAYb,GATL3C,KAAA8C,KAAe,GACf9C,KAAAmD,QAAyB,GACzBnD,KAAAqD,SAA8C,GAC9CrD,KAAA+C,UAAiC,GACjC/C,KAAA6D,cAAwB,GACrB7D,KAAA8D,MAAa,KACb9D,KAAA+D,KAAe,GACf/D,KAAAgE,mBAAkC,IAAIC,IAG9CjE,KAAK+D,KAAOpB,EAAU1B,IACtBjB,KAAK8C,KAAOH,EAAUG,KACtB9C,KAAKkD,WAAWP,EAAUQ,SAC1BnD,KAAKoD,YAAYT,EAAUU,UAC3BrD,KAAKsD,aAAaX,EAAUI,kBAG9B3D,OAAA8E,eAAWV,EAAA/D,UAAA,MAAG,KAAd,WACE,OAAOO,KAAK+D,sCAGPP,EAAA/D,UAAA0E,UAAA,SAAUvD,EAAYwD,GAU3B,QAV2B,IAAAA,IAAAA,EAAA,IAC3BjC,EAAMkC,eAAe,2BAA6BrE,KAAKiB,IAAM,OAASjB,KAAK6D,cAAc5D,YAAY6C,MACrGX,EAAMU,IAAI,cAAejC,GAEzBuB,EAAMU,IAAI,mBAAoB7C,KAAKsE,aACnCnC,EAAMU,IAAI,mBAAoB7C,KAAKmD,QAAQzC,QAC3CyB,EAAMU,IAAI,iBAAkB7C,KAAK6D,eACjC1B,EAAMoC,YAGDvE,KAAKgE,mBAAmBQ,IAAIxE,KAAK6D,eAAgB,CACpD7D,KAAKgE,mBAAmBS,IAAIzE,KAAK6D,eACjC,IAAIS,EAAYtE,KAAKsE,YACjBF,EAAOM,aACT1E,KAAK2E,QAAQP,EAAQpE,KAAK+C,UAAU,GAAGC,SACvCsB,EAAYtE,KAAKsE,aAEnB,IAAMM,EAAa,MAACN,EAAiDA,EAAY1D,EAC7EkD,EAAQ9D,KAAK6E,SAASD,EAAYR,GAItC,OAHAN,EAAmB,OAAVA,EAAkBA,EAAQlD,EACnCuB,EAAMU,IAAI,qBAAuB7C,KAAKiB,IAAM,OAASjB,KAAK6D,cAAc5D,YAAY6C,KAAMgB,GAC1F9D,KAAK8E,gBAAgBF,GACdd,EAGT,OADA9D,KAAK8E,gBAAgBlE,GACdZ,KAAK6E,SAASjE,EAAOwD,IAGvBZ,EAAA/D,UAAAoF,SAAA,SAASjE,EAAawD,WAC3B,QAD2B,IAAAA,IAAAA,EAAA,SACbnC,IAAVrB,GAAuBZ,KAAK8D,MAC9B,OAAO9D,KAAK8D,MAGd,GAAqB,iBADrBlD,OAAmBqB,IAAVrB,EAAuBZ,KAAKsE,YAAc1D,IACR,OAAVA,EAE/B,OADAZ,KAAK8D,MAAQlD,EACNA,EAET,IAAMsB,EAAOT,gBAAkB2C,EAAOW,SAA6B,IAAlBX,EAAOW,OACtD,OAAOnE,EAGT,IAAMoE,EAAQhF,KACRP,EAAiBL,OAAO4C,OAAO,IAAIpB,EAAMX,YAAeW,EAAMtB,WAOpE,GALAG,EAAUwF,KAAO,WACfD,EAAMb,UAAUvD,EAAOwD,IAIrB7E,MAAM2F,QAAQtE,GAAQ,CACxB,eAIWuE,GACT1F,EAAU0F,GAAU,WAClB,IAAMb,EAAYU,EAAMV,YAElBc,EAAS7F,MAAME,UAAU0F,GAAQE,MAAMf,EAAWgB,WAIxD,OAHAnD,EAAMU,IAAI,oBAAsBmC,EAAM/D,IAAM,cACxCxB,EAAUQ,YAAY6C,KAAO,IAAMqC,GACvCH,EAAMb,UAAUG,EAAWF,GACpBgB,QARX,IAAqB,IAAAG,EAAApF,EAJM,CACzB,MAAO,OAAQ,UAAW,QAAS,UAAW,SAC9C,SAAU,UAAW,MAAO,OAAQ,OAAQ,eAEPqF,EAAAD,EAAA5E,QAAA6E,EAAA3E,KAAA2E,EAAAD,EAAA5E,OAAA,GAAtB6E,EAAA5E,0GAcnB,OAFAxB,OAAOC,eAAeuB,EAAOnB,GAC7BO,KAAK8D,MAAQlD,EACNA,GAGF4C,EAAA/D,UAAA6E,UAAA,SAAUF,QAAA,IAAAA,IAAAA,EAAA,IACf,IAAMqB,EAAQzF,KAAK+C,UAAU,GACvBnC,EAAQ6E,EAAQA,EAAMzC,QAAQJ,IAAI5C,KAAKiB,IAAKwE,EAAMrB,QAAU,KAClE,MAAyB,iBAAVxD,EAAsBA,EAAQ8E,KAAKC,MAAMD,KAAKE,UAAU5F,KAAK6E,SAASjE,EAAO6E,EAAMrB,WAG7FZ,EAAA/D,UAAAyD,WAAA,SAAWC,GAAX,IAAA0C,EAAA7F,KACLmD,EAAQ2C,SAAQ,SAAAC,GACd,IAAsC,IAAlCF,EAAK1C,QAAQ6C,QAAQD,IACD,iBAAXA,EAAqB,CAC9B,IAAME,EAAmBF,EAAOG,YAC1BC,EAAQN,EACdE,EAAOG,YAAc,WACa,mBAArBD,GACTA,EAAiBZ,MAAMrF,KAAMsF,WAE/BS,EAAOG,YAAcD,GAAoB,aAEzCE,EAAMnC,mBAAmBL,OAAOoC,GAChCI,EAAMhD,QAAUgD,EAAMhD,QAAQiD,QAAO,SAAAC,GAAK,OAAAA,IAAMN,KAC3CI,EAAMhD,QAAQzC,SACjByF,EAAM9C,SAASyC,SAAQ,SAAAQ,GACrBA,EAAQC,KAAOD,EAAQC,KAAKH,QAAO,SAAAnF,GAAO,OAAAA,IAAQkF,EAAMpC,WAE1DoC,EAAMK,aACNhE,EAAMiB,OAAO0C,IAEfhE,EAAMkC,eAAkB8B,EAAMlF,IAAG,uBACjCkB,EAAMU,IAAI,kBAAmBkD,EAAO9F,YAAY6C,MAChDX,EAAMU,IAAI,qBAAsBsD,EAAMhD,SACtChB,EAAMU,IAAI,aAAcL,EAAMI,IAAIuD,EAAMlF,MACxCkB,EAAMoC,YAERsB,EAAK1C,QAAQsD,KAAKV,QAMnBvC,EAAA/D,UAAA2D,YAAA,SAAYC,GAAZ,IAAAwC,EAAA7F,KACLqD,EAASyC,SAAQ,SAAAQ,IACyB,IAApCT,EAAKxC,SAAS2C,QAAQM,KACxBA,EAAQC,KAAKE,KAAKZ,EAAK9B,MACvB8B,EAAKxC,SAASoD,KAAKH,QAKlB9C,EAAA/D,UAAA6D,aAAA,SAAaoD,GAAb,IAAAb,EAAA7F,KACL0G,EAAeZ,SAAQ,SAAAL,IAC+C,IAAhEI,EAAK9C,UAAU4D,WAAU,SAAAC,GAAK,OAAAA,EAAE5D,UAAYyC,EAAMzC,aACpD6C,EAAK9C,UAAU0D,KAAKhB,GACpBA,EAAMzC,QAAQO,IAAIsC,EAAK5E,IAAK4E,EAAKvB,kBAKhCd,EAAA/D,UAAA+G,WAAA,WACLxG,KAAK8D,MAAQ,MAGRN,EAAA/D,UAAAqF,gBAAA,SAAgBlE,EAAYiG,GAA5B,IAAAhB,EAAA7F,KACDsC,EAAQ1B,EAAOZ,KAAKsE,cAGxBtE,KAAK+C,UAAU+C,SAAQ,SAAAL,GACrB,IAAMzC,EAAUyC,EAAMzC,QAElBA,IAAY6D,IAGhB1E,EAAMU,IAAI,yBAAyBgD,EAAK5E,IAAG,OAAQ+B,GACnDA,EAAQO,IAAIsC,EAAK9B,KAAMnD,EAAO6E,EAAMrB,aAI9BZ,EAAA/D,UAAAkF,QAAA,SAAQP,EAAyBpB,GACzC,IAAM1B,EAAU8C,EAAO9C,QAAUY,EAAOZ,QAAW,GAC7CwF,EAAY,SAAC7F,GAAyB,OAAAA,KAAO+B,EAAQ+D,cACrDrC,EAAaoC,EAAUxF,EAAS8C,EAAOM,YACzCpD,EAAS8C,EAAOM,WAChBN,EAAOM,WACX,GAAKoC,EAAUpC,GAAf,CAGAvC,EAAMU,IAAI,YAAa6B,EAAY,KAAMN,EAAOnD,IAAK,KAAM+B,EAAQC,kBACnE,IAAMrC,EAAQoC,EAAQJ,IAAI8B,EAAUtF,OAAA4C,OAAA5C,OAAA4C,OAAA,GAAMoC,GAAM,CAAE9C,OAAQ,MAC1D0B,EAAQO,IAAIvD,KAAK+D,KAAMnD,GACvBoC,EAAQS,OAAOiB,EAAY,CAACpD,OAAQ,SArLxC,gBCxBE,SAAA0F,EAAmBC,EAAqBhG,EAAoBiG,GAAzClH,KAAAiH,KAAAA,EAAqBjH,KAAAiB,IAAAA,EAAoBjB,KAAAkH,YAAAA,EAhBrDlH,KAAAmH,UAAaC,KAAKC,MAAQL,EAAgBM,cACjCtH,KAAAuH,SAAU,EACVvH,KAAAwH,cAAe,EACfxH,KAAAyH,YAAa,EACbzH,KAAA0H,UAAW,EACX1H,KAAA6D,cAAgB8D,OAChB3H,KAAA4H,kBAAmB,EACnB5H,KAAA6H,WAAa,EACb7H,KAAA8H,WAAY,EACZ9H,KAAA+H,KAAO,CAACJ,QACR3H,KAAAgI,aAAc,EACdhI,KAAAiI,WAAaN,OACb3H,KAAA+F,OAAS4B,OACT3H,KAAAkI,IAAMP,OAAOQ,SAASC,KAC/BpI,KAAAqI,YAAa,SASpBjJ,OAAA8E,eAAW8C,EAAAvH,UAAA,YAAS,KAApB,WACE,OAAO6I,aAAa7I,UAAU8I,UAAUC,KAAKxI,uCAG/CZ,OAAA8E,eAAW8C,EAAAvH,UAAA,iBAAc,KAAzB,WACE,OAAO6I,aAAa7I,UAAUgJ,eAAeD,KAAKxI,uCAGpDZ,OAAA8E,eAAW8C,EAAAvH,UAAA,2BAAwB,KAAnC,WACE,OAAO6I,aAAa7I,UAAUiJ,yBAAyBF,KAAKxI,uCAG9DZ,OAAA8E,eAAW8C,EAAAvH,UAAA,kBAAe,KAA1B,WACE,OAAO6I,aAAa7I,UAAUkJ,gBAAgBH,KAAKxI,uCAGrDZ,OAAA8E,eAAW8C,EAAAvH,UAAA,eAAY,KAAvB,WACE,OAAO6I,aAAa7I,UAAUmJ,aAAaJ,KAAKxI,uCAGlDZ,OAAA8E,eAAW8C,EAAAvH,UAAA,YAAS,KAApB,WACE,OAAO6I,aAAa7I,UAAUoJ,2CAGhCzJ,OAAA8E,eAAW8C,EAAAvH,UAAA,iBAAc,KAAzB,WACE,OAAO6I,aAAa7I,UAAUqJ,gDAGhC1J,OAAA8E,eAAW8C,EAAAvH,UAAA,kBAAe,KAA1B,WACE,OAAO6I,aAAa7I,UAAUqJ,qDAxDf9B,EAAAM,cAAgBF,KAAKC,MCExC,IAAM0B,EAAOxG,QAAQ,cACfyG,EAAOzG,QAAQ,cACf0G,EAAS1G,QAAQ,6BAGrB,SAAA2G,EAAsB5C,EAA+CrF,GAA/CjB,KAAAsG,QAAAA,EAA+CtG,KAAAiB,IAAAA,EAG3DjB,KAAAmJ,cAAqB,KAUrBnJ,KAAAoJ,MAAuB,GAUvBpJ,KAAAqJ,QAAUnH,EAAOZ,cAd3BlC,OAAA8E,eAAWgF,EAAAzJ,UAAA,eAAY,KAAvB,WACE,OAAOO,KAAKmJ,+CASd/J,OAAA8E,eAAWgF,EAAAzJ,UAAA,OAAI,KAAf,WACE,OAAOO,KAAKsJ,4CASdlK,OAAA8E,eAAWgF,EAAAzJ,UAAA,SAAM,KAAjB,WACE,OAAOO,KAAKqJ,SAAW,oCAOzBjK,OAAA8E,eAAWgF,EAAAzJ,UAAA,QAAK,KAAhB,WACE,OAAOO,KAAKuJ,gBAAgBvJ,KAAKsE,8CAGnClF,OAAA8E,eAAcgF,EAAAzJ,UAAA,YAAS,KAAvB,WACE,OAAOO,KAAKuJ,gBAAgBvJ,KAAKsG,QAAQtD,QAAQJ,IAAI5C,KAAKiB,IAAK,CAACK,OAAQtB,KAAKqJ,4CAG/EjK,OAAA8E,eAAcgF,EAAAzJ,UAAA,aAAU,KAAxB,WACE,OAAOO,KAAKoJ,MAAMI,KAAK,sCAQlBN,EAAAzJ,UAAAgK,QAAA,SAAQ1B,GAEb,OADA/H,KAAKoJ,MAAQrB,EAAK2B,MAAM,KACjB1J,MASFkJ,EAAAzJ,UAAAkK,WAAA,SAAW5B,GAEhB,OADA/H,KAAKoJ,MAAM3C,KAAKsB,GACT/H,MAQFkJ,EAAAzJ,UAAAmK,aAAA,WAEL,OADA5J,KAAKoJ,MAAMS,MACJ7J,MAOFkJ,EAAAzJ,UAAAqK,UAAA,WAEL,OADA9J,KAAKoJ,MAAQ,GACNpJ,MAQFkJ,EAAAzJ,UAAAsK,UAAA,SAAUzI,GAEf,OADAtB,KAAKqJ,QAAU/H,EACRtB,MAQFkJ,EAAAzJ,UAAAuK,aAAA,SAAa1I,GAGlB,OAFAtB,KAAKsG,QAAQtD,QAAQO,IAAIvD,KAAKiB,IAAKjB,KAAKiK,UAAW,CAAC3I,OAAMA,IAC1DtB,KAAKsG,QAAQtD,QAAQS,OAAOzD,KAAKiB,IAAK,CAACK,OAAQtB,KAAKqJ,UAC7CrJ,KAAK+J,UAAUzI,IAQjB4H,EAAAzJ,UAAAyK,gBAAA,SAAgBC,GACrBnK,KAAKmJ,cAAgBgB,EACrB,IAAMvJ,EAAQZ,KAAKsE,YAInB,OAHItE,KAAKoK,kBAAkBxJ,IACzBZ,KAAKiF,KAAKkF,GAELnK,MAQFkJ,EAAAzJ,UAAAwF,KAAA,SAAKrE,GAKV,OAJIZ,KAAKsJ,aACP1I,EAAQoI,EAAKhJ,KAAKiK,UAA4BjK,KAAKsJ,WAAYtJ,KAAKuJ,gBAAgB3I,KAEtFZ,KAAKsG,QAAQtD,QAAQO,IAAIvD,KAAKiB,IAAKjB,KAAKuJ,gBAAgB3I,GAAQ,CAACU,OAAQtB,KAAKqJ,UACvErJ,MAQFkJ,EAAAzJ,UAAA4K,OAAA,SAAOzJ,GACZ,OAAOZ,KAAKiF,KAAKgE,EAAOjJ,KAAKsE,YAAa1D,KAOrCsI,EAAAzJ,UAAAgE,OAAA,WAEL,OADAzD,KAAKsG,QAAQtD,QAAQS,OAAOzD,KAAKiB,KAC1BjB,MAGCkJ,EAAAzJ,UAAA8J,gBAAA,SAAmB3I,GAC3B,OAAOZ,KAAKoK,kBAAkBxJ,GAASZ,KAAKmJ,cAAgBvI,GAGpDsI,EAAAzJ,UAAA2K,kBAAA,SAAkBxJ,GAC1B,OAAA,MAAQA,GAGAsI,EAAAzJ,UAAA6E,UAAA,WACR,IAAM1D,EAAQZ,KAAKsG,QAAQtD,QAAQJ,IAAI5C,KAAKiB,IAAK,CAACK,OAAQtB,KAAKqJ,UAC/D,OAAIrJ,KAAKsJ,WACAP,EAAKnI,EAAOZ,KAAKsJ,YAEnB1I,qBC9JT,SAAA0J,EAA6BtH,GAAAhD,KAAAgD,QAAAA,SAO7B5D,OAAA8E,eAAWoG,EAAA7K,UAAA,OAAI,KAAf,WAAA,IAAAoG,EAAA7F,KAEQuK,EAAavK,KAAKgD,QAAQuD,KAAKH,QAAO,SAAAnF,GAC1C,OAAI4E,EAAK7C,QAAQ1B,SAAUuE,EAAK7C,QAAQ1B,OAAOZ,QACtCO,EAAIuJ,WAAW3E,EAAK7C,QAAQ1B,WAIjCmJ,EAAiBzK,KAAKC,YAA2CsG,KACvE,OAAOgE,EAAWG,OAAOD,oCAG3BrL,OAAA8E,eAAWoG,EAAA7K,UAAA,SAAM,KAAjB,WACE,OAAOyC,mCAGFoI,EAAA7K,UAAAmD,IAAA,SAAI3B,GACT,OAAOjB,KAAKgD,QAAQJ,IAAI3B,IAOnBqJ,EAAA7K,UAAAkL,KAAA,SAAK1J,GACV,OAAO,IAAIiI,EAASlJ,KAAMiB,IAGrBqJ,EAAA7K,UAAA8D,IAAA,SAAOtC,EAAaL,GACzB,OAAOZ,KAAKgD,QAAQO,IAAItC,EAAKL,IAGxB0J,EAAA7K,UAAA4K,OAAA,SAAOpJ,EAAa2J,GACzB,IAAMhK,EAAQZ,KAAK4C,IAAI3B,GACvB,YAAcgB,IAAVrB,GAAwC,iBAAVA,GAChCuB,EAAM0I,MAAM,IAAIC,MAAM,uBAAuB7J,EAAG,oDACzCL,GAEFZ,KAAKuD,IAAItC,EAAK8J,EAAAA,QAAM,GAAInK,EAAOgK,KAIjCN,EAAA7K,UAAAgE,OAAA,SAAOxC,GACZ,OAAOjB,KAAKgD,QAAQS,OAAOxC,IAGtBqJ,EAAA7K,UAAAuL,QAAA,SAAQ/J,EAAcgK,GAC3B,OAAOjL,KAAKkL,SAASC,KACnB/E,EAAAA,QAAO,SAACgF,SACN,OAAKnK,IAGDgK,EACE/I,EAAOZ,QAAUL,EAAIuJ,WAAWtI,EAAOZ,QAClC8J,EAAMnK,MAAQA,EAEhBmK,EAAMnK,MAAQiB,EAAOZ,OAASL,GAED,KAApB,QAAToK,EAAAD,EAAMnK,WAAG,IAAAoK,OAAA,EAAAA,EAAErF,QAAQ/E,QAG9BqK,EAAAA,MAAM,MASHhB,EAAA7K,UAAA8L,MAAA,SAAM/J,EAAuBgK,GAA7B,IAAA3F,EAAA7F,KAEL,GAAkB,gBADlBwB,EAAYA,GAAaU,EAAOV,WACA,CAC9B,IAAI+E,EAAO,GACkB,iBAAlBiF,GACTjF,EAAOvG,KAAKuG,KAAKH,QAAO,SAAAnF,GAAO,OAAAuB,EAAMI,IAAI3B,GAAKkC,QAAQsI,SAASD,MAC/DrJ,EAAMU,IAAI7C,KAAKgD,QAAQC,iBAAmB,mCACtCuI,EAAcvL,YAAY6C,KAAO,IAAKyD,KAE1CA,EAAOvG,KAAKuG,KACZpE,EAAMU,IAAI7C,KAAKgD,QAAQC,iBAAmB,8BAA+BsD,IAE3EA,EAAKT,SAAQ,SAAA7E,GAAO,OAAA4E,EAAKpC,OAAOxC,UACT,WAAdO,GACTgK,EAAgBA,GAAiBxL,KAAKgD,QAAQ1B,OAC9CtB,KAAKgD,QAAQ8C,SAAQ,SAAClF,EAAOK,GACvBA,EAAIuJ,WAAWgB,IACjB3F,EAAKpC,OAAOoC,EAAK7C,QAAQ0I,WAAWzK,QAGjB,QAAdO,GACTxB,KAAKgD,QAAQuI,SAIPjB,EAAA7K,UAAAkM,cAAA,SAAc1K,EAAa2K,EAAeC,GAClD,IAAM5E,EAAOjH,KAAKgD,QAAQC,iBAAiB6I,OAAO,GAAGC,cAAgB/L,KAAKgD,QAAQC,iBAAiB+I,MAAM,GACnGZ,EAAQ,IAAIpE,EAAgBC,EAAMhG,EAAKjB,KAAKgD,QAAQ+D,cAG1D,OAFAqE,EAAMS,cAAyB5J,IAAb4J,EAA0BA,EAAW7L,KAAK4C,IAAI3B,GAChEmK,EAAMQ,SAAWA,EACVR,GAGCd,EAAA7K,UAAAwM,eAAA,SAAeC,GACvB,IAAMd,EAAQpL,KAAK2L,cACjBO,EAAGjL,IACHjB,KAAKgD,QAAQmJ,YAAYD,EAAGN,UAC5B5L,KAAKgD,QAAQmJ,YAAYD,EAAGL,WAE9B,OADAT,EAAM/C,YAAa,EACZ+C,QAxHKd,EAAA/D,KAAsB,oBCFpC,SAAA6F,EAAmBC,EAAqB/K,EAAqBC,GAA7D,IAAAsE,EAAA7F,UAAwC,IAAAsB,IAAAA,EAAA,IA4B9BtB,KAAAqJ,QAAkB,GAMlBrJ,KAAAkL,SAAqC,IAAIoB,EAAAA,QAjCjDtM,KAAKuM,SAAWF,EAChBrM,KAAKqJ,QAAU/H,EAGXA,IAAWC,GAGXA,MAAAA,IAMJY,EAAMU,IAAI7C,KAAKiD,iBAAmB,kCAAoC1B,EAAiB,OAASD,GAChGtB,KAAK8F,SAAQ,SAAClF,EAAOK,GAEnB,GAAIA,EAAIuJ,WAAWjJ,KAAoBN,EAAIuJ,WAAW1J,GAAgB,CACpE,IAAM0L,EAAoB3G,EAAK6F,WAAWzK,GAC1C4E,EAAKtC,IAAIiJ,EAAmB3G,EAAK0G,SAASvL,QAAQC,IAE3B,KAAnBM,GACFsE,EAAK0G,SAASE,WAAWxL,eAQjC7B,OAAA8E,eAAWkI,EAAA3M,UAAA,SAAM,KAAjB,WACE,OAAOO,KAAKqJ,yCAKdjK,OAAA8E,eAAWkI,EAAA3M,UAAA,UAAO,KAAlB,WACE,OAAOO,KAAKkL,SAASwB,gDAGvBtN,OAAA8E,eAAWkI,EAAA3M,UAAA,OAAI,KAAf,WACE,IAAM8G,EAAsB,GAE5B,OADAvG,KAAK8F,SAAQ,SAAClF,EAAOK,GAAQ,OAAAsF,EAAKE,KAAKxF,MAChCsF,mCAGK6F,EAAAO,YAAP,SAAmB/L,GACxB,OAAO8E,KAAKE,UAAUhF,IAGVwL,EAAAD,YAAP,SAAmBvL,GACxB,GAAc,cAAVA,EACF,OAAO,KAET,IACE,OAAO8E,KAAKC,MAAM/E,GAClB,MAAOgG,GACP,OAAOhG,IAIJwL,EAAA3M,UAAAsH,WAAA,WACL,OAAO/G,KAAKuM,UAGPH,EAAA3M,UAAAmN,cAAA,SAAc3L,EAAaK,GAEhC,MAAO,IADPA,EAA4B,iBAAXA,EAAuBA,EAAStB,KAAKsB,QACnCL,GAGdmL,EAAA3M,UAAAwD,eAAA,WACL,OAAOjD,KAAKuM,SAAStF,OAAUjH,KAAKuM,WAAarL,aAAgB,eAAiB,mBAG7EkL,EAAA3M,UAAAmD,IAAA,SAAI3B,EAAamD,QAAA,IAAAA,IAAAA,EAAA,IACtB,IAAMyI,EAAa7M,KAAK4M,cAAc3L,EAAKmD,EAAO9C,QAC5CV,EAAQZ,KAAKuM,SAASvL,QAAQ6L,GAKpC,OAAO7M,KAAKmM,YAAYvL,IAGnBwL,EAAA3M,UAAA8D,IAAA,SAAOtC,EAAaL,EAAUwD,GACnC,QADmC,IAAAA,IAAAA,EAAA,IAC/BxD,MAAAA,EAEF,OADAZ,KAAKyD,OAAOxC,GACL,KAET,IACE,IAAM4L,EAAa7M,KAAK4M,cAAc3L,EAAKmD,EAAO9C,QAC5CwL,EAAW9M,KAAK2M,YAAY/L,GAClCZ,KAAK+M,UAAU9L,EAAKL,GACpBZ,KAAKuM,SAASpL,QAAQ0L,EAAYC,EAAU1I,EAAO4I,SACnD,IAAMrK,EAAYH,EAAMI,IAAI3B,GACxB0B,IACFR,EAAMU,IAAI,qCAAqC7C,KAAKC,YAAY6C,KAAI,IAAKH,GACzEA,EAAU6D,aACV7D,EAAUmC,gBAAgBlE,EAAOZ,OAEnC,MAAOiN,GACP5K,QAAQ6K,KAAK,eAAelN,KAAKiD,iBAAgB,iEACMhC,EAAG,KAAML,GAChEyB,QAAQ4K,MAAMA,GAEhB,OAAOrM,GAIFwL,EAAA3M,UAAAgE,OAAA,SAAOxC,EAAamD,QAAA,IAAAA,IAAAA,EAAA,IACzB,IAAMyI,EAAa7M,KAAK4M,cAAc3L,EAAKmD,EAAO9C,QAClDtB,KAAKuM,SAASE,WAAWI,GACzB,IAAMlK,EAAYH,EAAMI,IAAI3B,GACxB0B,GACFA,EAAU6D,cAIP4F,EAAA3M,UAAA8L,MAAA,WAAA,IAAA1F,EAAA7F,KACLA,KAAK+M,UAAU,KAAa,KAAM,MAClC/M,KAAK8F,SAAQ,SAAClF,EAAOK,GACfA,EAAIuJ,WAAW1J,IAGnB+E,EAAKpC,OAAOxC,EAAK,CAACK,OAAQ,SAIvB8K,EAAA3M,UAAAqG,QAAA,SAAQqH,GAAR,IAAAtH,EAAA7F,KACL,GAAqC,mBAA1BA,KAAKuM,SAASzG,QACvB,OAAO9F,KAAKuM,SAASzG,SAAQ,SAAClF,EAAYK,GACxCkM,EAAWtH,EAAKsG,YAAYvL,GAAQK,MAGxC7B,OAAOmH,KAAKvG,KAAKuM,UAAUzG,SAAQ,SAAC7E,GAClCkM,EAAWtH,EAAKsG,YAAYtG,EAAK0G,SAAStL,IAAOA,OAI9CmL,EAAA3M,UAAAkN,YAAA,SAAY/L,GACjB,OAAOwL,EAAkBO,YAAY/L,IAGhCwL,EAAA3M,UAAA0M,YAAA,SAAYvL,GACjB,OAAOwL,EAAkBD,YAAYvL,IAGhCwL,EAAA3M,UAAAiM,WAAA,SAAWzK,GAChB,OAAOA,EAAImM,QAAQpN,KAAKsB,OAAQ,KAGxB8K,EAAA3M,UAAAsN,UAAA,SAAU9L,EAAa2K,EAAeC,GAC9C,IAAMT,EAAQ,IAAIpE,EAAgBhH,KAAKiD,iBAAkBhC,EAAKjB,KAAKuM,UACnEnB,EAAMS,cAAyB5J,IAAb4J,EAA0BA,EAAW7L,KAAK4C,IAAI3B,GAChEmK,EAAMQ,SAAWA,EACjB5L,KAAKkL,SAASvK,KAAKyK,SClKvBiC,EAAA,WAAA,SAAAA,IAGSrN,KAAAsN,gBAA6C,IAAIhB,EAAAA,eAS9Ce,EAAA5N,UAAAsN,UAAA,SAAU9L,EAAa2K,EAAeC,SACxCT,EAAQ,IAAIpE,EAAgBhH,KAAKiH,KAAMhG,EAAKjB,MAClDoL,EAAMS,cAAyB5J,IAAb4J,EAA0BA,EAAW7L,KAAKgB,QAAQC,GACpEmK,EAAMQ,SAAWA,EACjBR,EAAM/C,YAAa,EACC,QAApBgD,EAAArL,KAAKsN,uBAAe,IAAAjC,GAAAA,EAAE1K,KAAKyK,MAjB/B,GCqKamC,EAAiB,IAjK9B,SAAAC,GAIE,SAAAC,IAAA,IAAA5H,EACE2H,EAAA7N,KAAAK,OAAOA,YAJC6F,EAAA6H,mBAA6B,GAC7B7H,EAAA8H,eAAsC,IAAI/J,IAIlDiC,EAAK+H,cACD1L,EAAOP,sBACTkM,EAAAA,SAAS3L,EAAOP,sBACbmM,WAAU,kBACgB,QAArBzC,EAACxF,EAAKyH,uBAAe,IAAAjC,OAAA,EAAAA,EAAE0C,UAAUrN,SAGrCmF,EAAK+H,0BAbqBhO,EAAA6N,EAAAD,GAkBlCpO,OAAA8E,eAAWuJ,EAAAhO,UAAA,OAAI,KAAf,WACE,MAAO,kDAGTL,OAAA8E,eAAWuJ,EAAAhO,UAAA,SAAM,KAAjB,WACE,OAAOO,KAAKgO,aAAatN,wCAGpB+M,EAAAhO,UAAAwB,IAAA,SAAIgN,GACT,OAAOjO,KAAKgO,aAAaC,IAGpBR,EAAAhO,UAAAuB,QAAA,SAAQC,GACb,OAAOjB,KAAK4N,cAAchL,IAAI3B,IAGzBwM,EAAAhO,UAAAgN,WAAA,SAAWxL,GAChB,GAAwB,oBAAbiN,SAAX,CAGA,IAAIC,EAASnO,KAAKoO,cAAclM,EAAOR,cACvCyM,EAAS,EAAW,UAAYA,EAAS,IAAM,GAC/CD,SAASG,OAASpN,EAAM,oDAAsDkN,EAC9EnO,KAAK2N,eAAehK,OAAO1C,KAQtBwM,EAAAhO,UAAA0B,QAAA,SAAQF,EAAaL,EAAe0N,GACzC,GAAwB,oBAAbJ,SAAX,CAGA,IAAIC,EAASnO,KAAKoO,cAAclM,EAAOR,cACvCS,EAAMU,IAAI,kBAAmBsL,GAC7BA,EAAS,EAAW,UAAYA,EAAS,IAAM,GAC/C,IAAII,EAAU,GACVD,aAA0BlH,KAC5BmH,EAAUD,EAAeE,cACG,OAAnBF,IACTC,EAAU,iCAEZ,IACMF,EAASpN,EAAM,IAAML,GADX2N,EAAU,aAAeA,EAAU,IACN,WAAaJ,EAC1DhM,EAAMU,IAAI,4BAA6BwL,GACvCrO,KAAK2N,eAAepK,IAAItC,EAAKL,GAC7BsN,SAASG,OAASA,IAGbZ,EAAAhO,UAAA8L,MAAA,WAAA,IAAA1F,EAAA7F,KACLA,KAAKgO,aAAalI,SAAQ,SAAA7E,GAAO,OAAA4E,EAAK4G,WAAWxL,OAG5CwM,EAAAhO,UAAAqG,QAAA,SAAQqH,GACb,OAAOnN,KAAK4N,cAAc9H,SAAQ,SAAClF,EAAOK,GAAQ,OAAAkM,EAAWvM,EAAOK,OAG5DwM,EAAAhO,UAAAuO,WAAA,WACR,OAAOzO,MAAMkP,KAAKzO,KAAK4N,cAAcrH,SAI7BkH,EAAAhO,UAAAmO,YAAA,WAAA,IAAA/H,EAAA7F,KACR,GAAIA,KAAK0N,qBAAuBQ,SAASG,OACvC,OAAOrO,KAAK2N,eAEd,IAAMe,EAAM,IAAI9K,IAChB,GAAwB,oBAAbsK,SACT,OAAOQ,EAKT,IAHA,IAAMC,EAAUT,SAASG,OAAO3E,MAAM,KAG7BjJ,EAAI,EAAGA,EAAIkO,EAAQjO,OAAQD,IAAK,CACvC,IAAM4N,EAASM,EAAQlO,GAAGmO,OACpBC,EAAQR,EAAOrI,QAAQ,KACvB/E,EAAM4N,GAAS,EAAIR,EAAOS,OAAO,EAAGD,GAASR,EAC7CzN,EAAQiO,GAAS,EAAIR,EAAOS,OAAOD,EAAQ,EAAGR,EAAO3N,QAAU2N,EACrEK,EAAInL,IAAItC,EAAKL,GAsBf,OAnBIZ,KAAK2N,iBACPe,EAAI5I,SAAQ,SAAClF,EAAOK,GAClB,IAAI8N,EAAmBlJ,EAAK8H,eAAe/K,IAAI3B,GAE3CL,KADJmO,OAA+B9M,IAAhB8M,EAA6BA,EAAc,OAExDlJ,EAAKkH,UACH9L,EACAmL,EAAkBD,YAAYvL,GAC9BwL,EAAkBD,YAAY4C,OAIpC/O,KAAK2N,eAAe7H,SAAQ,SAAClF,EAAOK,GAC7ByN,EAAIlK,IAAIvD,IACX4E,EAAKkH,UAAU9L,EAAK,KAAMmL,EAAkBD,YAAYvL,QAI9DZ,KAAK0N,mBAAqBQ,SAASG,OAC5BrO,KAAK2N,eAAiBe,GAWrBjB,EAAAhO,UAAA2O,cAAA,SAAcrG,GACtB,IAAKA,EACH,MAAO,GAET,IAAMiH,EAAWd,SAASC,OAC1B,OAAKa,EAASC,MAAM,QAAU,IAAIvO,OAAS,EAClC,IAEgB,MAAZqH,EAAK,IAA2C,IAA7BiH,EAAShJ,QAAQ,QAAiB,OAAS,IAC9D+B,EAAO/H,KAAKkP,aAOjBzB,EAAAhO,UAAAyP,UAAA,WAKR,IAJA,IAAIzO,EAAI,EACJ0N,EAASD,SAASC,OAChBgB,EAAchB,EAAOzE,MAAM,KAC3BrJ,EAAI,OAAQ,IAAK+G,MAAQgI,UACxB3O,EAAK0O,EAAYzO,OAAS,IAAgD,IAA1CwN,SAASG,OAAOrI,QAAQ3F,EAAI,IAAMA,IACvE8N,EAASgB,EAAYnD,OAAO,IAAOvL,GAAI+I,KAAK,KAC5C0E,SAASG,OAAShO,EAAI,IAAMA,EAAI,WAAa8N,EAAS,IAGxD,OADAD,SAASG,OAAShO,EAAI,kDAAoD8N,EAAS,IAC5EA,KA7JX,CAAoCd,ICPpCgC,EAAA,SAAA7B,GAAA,SAAA6B,0DAA0CzP,EAAAyP,EAAA7B,GACjC6B,EAAA5P,UAAAkN,YAAA,SAAY/L,GACjB,OAAOA,GAGFyO,EAAA5P,UAAA0M,YAAA,SAAYvL,GACjB,OAAOA,KANX,CAA0CwL,GC+C7BkD,EAAgB,IA9C7B,SAAA9B,GAGE,SAAA+B,IAAA,IAAA1J,EACE2H,EAAA7N,KAAAK,OAAOA,YAHC6F,EAAA2J,UAA8B,IAAI5L,WAInCiC,EAAKyH,yBALmB1N,EAAA2P,EAAA/B,GAQjCpO,OAAA8E,eAAWqL,EAAA9P,UAAA,OAAI,KAAf,WACE,MAAO,iDAGTL,OAAA8E,eAAWqL,EAAA9P,UAAA,SAAM,KAAjB,WACE,OAAOO,KAAKgO,aAAatN,wCAGpB6O,EAAA9P,UAAAwB,IAAA,SAAIgN,GACT,OAAOjO,KAAKgO,aAAaC,IAGpBsB,EAAA9P,UAAAuB,QAAA,SAAQC,GACb,IAAML,EAAQZ,KAAKwP,UAAU5M,IAAI3B,GACjC,YAAkBgB,IAAVrB,EAAuBA,EAAQ,MAGlC2O,EAAA9P,UAAAgN,WAAA,SAAWxL,GAChBjB,KAAKwP,UAAU7L,OAAO1C,IAGjBsO,EAAA9P,UAAA0B,QAAA,SAAQF,EAAaL,GAC1BZ,KAAKwP,UAAUjM,IAAItC,EAAKL,IAGnB2O,EAAA9P,UAAA8L,MAAA,WACLvL,KAAKwP,UAAUjE,SAGVgE,EAAA9P,UAAAqG,QAAA,SAAQ2J,GACb,OAAOzP,KAAKwP,UAAU1J,SAAQ,SAAClF,EAAOK,GAAQ,OAAAwO,EAAK7O,EAAOK,OAGlDsO,EAAA9P,UAAAuO,WAAA,WACR,OAAOzO,MAAMkP,KAAKzO,KAAKwP,UAAUjJ,WA1CrC,CAAmC8G,ICGtBqC,EACX,IAAItD,EAAkBlL,aAAcgB,EAAOZ,OAAQY,EAAOX,gBAC/CoO,EACX,IAAIvD,EAAkBwD,eAAgB1N,EAAOZ,OAAQY,EAAOX,gBACjDsO,EACX,IAAIzD,EAAkBmB,EAAgBrL,EAAOZ,OAAQY,EAAOX,gBACjDuO,EACX,IAAIT,EAAqBC,EAAepN,EAAOZ,OAAQY,EAAOZ,sBCF9D,SAAAyO,IAAA,IAAAlK,EACE2H,EAAA7N,KAAAK,KAAM0P,IAAoB1P,YAC1B6F,EAAKqF,SACHH,EAAAA,MAAMiF,EAAAA,UAA2BrI,OAAQ,WACpCwD,KACC/E,EAAAA,QAAO,SAACgF,GAA2B,OAAAA,EAAMlE,cAAgBhG,gBACzDwN,EAAAA,KAAI,SAACtD,GAA2B,OAAAvF,EAAKoG,eAAeb,OAExDsE,EAAoB9E,kBAXahL,EAAAmQ,EAAAvC,MAAAlD,GACzByF,EAAAxJ,KAAsB,uBAFrC0J,EAAAA,qECIC,SAAAC,IAAA,IAAArK,EACE2H,EAAA7N,KAAAK,KAAM2P,IAAsB3P,YAC5B6F,EAAKqF,SACHH,EAAAA,MAAMiF,EAAAA,UAA2BrI,OAAQ,WACpCwD,KACC/E,EAAAA,QAAO,SAACgF,GAA2B,OAAAA,EAAMlE,cAAgB0I,kBACzDlB,EAAAA,KAAI,SAACtD,GAA2B,OAAAvF,EAAKoG,eAAeb,OAExDuE,EAAsB/E,kBAXahL,EAAAsQ,EAAA1C,MAAAlD,GAC3B4F,EAAA3J,KAAsB,uBAFrC0J,EAAAA,qECGC,SAAAE,IAAA,MAAAtK,EAAA7F,YACE6F,EAAA2H,EAAA7N,KAAAK,KAAM6P,IAAsB7P,MACvBkL,SAAYqC,EAAeD,gBAC5BvC,EAAAA,MAAoC,QAA/BM,EAACkC,EAAeD,uBAAe,IAAAjC,OAAA,EAAAA,EAAEqB,eAAgBmD,EAAsBjF,SAD9BiF,EAAsBjF,iBALjChL,EAAAuQ,EAAA3C,GASlC2C,EAAA1Q,UAAA8D,IAAA,SAAOtC,EAAaL,EAAU0N,GACnC,OAAOtO,KAAKgD,QAAQO,IAAItC,EAAKL,EAAO,CAACoM,QAASsB,QAVPhE,GAC3B6F,EAAA5J,KAAsB,uBAFrC0J,EAAAA,qECEC,SAAAG,IAAA,IAAAvK,EACE2H,EAAA7N,KAAAK,KAAM8P,IAAqB9P,YAC3B6F,EAAKqF,SAAW4E,EAAqBlF,iBALChL,EAAAwQ,EAAA5C,MAAAlD,YC6B1BiF,EAAcc,EACAjM,GAC5B,OAAOkM,EAAWR,EAAsBM,EAAsBC,EAAcjM,GAG9E,SAASkM,EACPC,EACAjK,EACA+J,EACAjM,GAEA,YAFA,IAAAA,IAAAA,EAAA,IAEO,SAAC2B,EAAayK,GACnB,IAAIvP,EAAc,GACS,iBAAhBoP,GACTpP,EAAMoP,EAAYpP,KAAO,GACzBmD,EAASiM,GACuB,iBAAhBA,IAChBpP,EAAMoP,GAERpP,EAAMA,GAAOmD,EAAOnD,KAAOuP,EAE3B,IAAI7N,EAAYH,EAAMC,YAAY,CAChCxB,IAAGA,EACH6B,KAAM0N,EACNrN,QAAS,CAAC4C,GACV1C,SAAU,CAACiD,GACXvD,UAAW,CAAC,CACVC,QAASuN,EACTnM,OAAMA,MAkBV,OAdAhF,OAAO8E,eAAe6B,EAAQyK,EAAc,CAC1C5N,IAAK,WACH,OAAOD,EAAUkC,cAAS5C,EAAWmC,IAEvCb,IAAK,SAAS3C,GACP4B,EAAMI,IAAID,EAAU1B,OACvB0B,EAAYH,EAAMC,YAAYE,IAEhCA,EAAUO,WAAW,CAAC6C,IACtBpD,EAAUkB,cAAgBkC,EAC1BpD,EAAUwB,UAAUvD,EAAOwD,IAE7BqM,cAAc,IAET1K,GD1EKqK,EAAA7J,KAAsB,uBAFrC0J,EAAAA,oEEaD,SAAAS,YAEgBA,EAAAC,QAAP,WACL,MAAO,CACLC,SAAUF,IAIAA,EAAAG,SAAP,WACL,OAAOH,4BApBVI,EAAAA,SAAQC,KAAA,CAAC,CACRC,aAAc,GACdC,QAAS,GACTC,QAAS,GACTC,UAAW,CACTpB,EACAG,EACAC,EACAC,gCDe0BC,EACAjM,GAC5B,OAAOkM,EAAWT,EAAuBM,EAAuBE,EAAcjM,+EAZnDiM,EACAjM,GAC3B,OAAOkM,EAAWZ,EAAqBK,EAAqBM,EAAcjM,6GAG7CiM,EACAjM,GAC7B,OAAOkM,EAAWX,EAAuBO,EAAuBG,EAAcjM","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export const CONFIG_PREFIX = 'NGX-STORE_';\n\nexport class ConfigHelper {\n  public static getItem(key: string): any {\n    return localStorage.getItem(CONFIG_PREFIX + key);\n  }\n\n  public static setItem(key: string, item: any): void {\n    return localStorage.setItem(CONFIG_PREFIX + key, item);\n  }\n}\n","import { WebStorageConfigInterface } from './config.interface';\nimport { ConfigHelper } from './config.helper';\nimport { Debugger } from 'ts-debug';\n\n// TODO allow to set different config for local and session storage\n// TODO check if NGXSTORE_CONFIG implements WebStorageConfigInterface\n// TODO allow to set configuration in node-config (`config` on npm)\n\nexport { CONFIG_PREFIX } from './config.helper';\n\nconst DefaultConfig: WebStorageConfigInterface = {\n  prefix: 'ngx_',\n  previousPrefix: 'angular2ws_',\n  clearType: 'prefix',\n  mutateObjects: true,\n  cookiesScope: '',\n  cookiesCheckInterval: 0,\n  debugMode: false,\n};\n\n// take configuration provided as a global variable\ndeclare const NGXSTORE_CONFIG: WebStorageConfigInterface;\n\nlet ConfigFills: WebStorageConfigInterface = {};\nconst localStoragePrefix = ConfigHelper.getItem('prefix');\n\nif (typeof NGXSTORE_CONFIG === 'object') {\n  ConfigFills = Object.assign({}, NGXSTORE_CONFIG);\n}\n\nif (localStoragePrefix !== undefined && localStoragePrefix !== null) {\n  ConfigFills.previousPrefix = localStoragePrefix;\n} else if (ConfigFills.previousPrefix === undefined) {\n  ConfigFills.previousPrefix = DefaultConfig.previousPrefix;\n}\n\n// merge default config, deprecated config and global config all together\nexport const Config: WebStorageConfigInterface =\n  Object.assign({}, DefaultConfig, ConfigFills);\n\nexport const debug = new Debugger(console, Config.debugMode, '[ngx-store] ');\nConfigHelper.setItem('prefix', Config.prefix);\n","import { Config, debug } from '../config/config';\nimport { CacheItemInterface, UtilityEntry } from './cache.interface';\nimport { WebStorageServiceInterface } from '../service/webstorage.interface';\nimport { DecoratorConfig } from '../ngx-store.types';\nimport { WebStorageUtility } from '../utility/webstorage.utility';\n\nconst isEqual = require('lodash.isequal');\n\nexport class Cache {\n  public static items: Map<string, CacheItem> = new Map();\n\n  public static getCacheFor(cacheCandidate: CacheItemInterface): CacheItem {\n    let cacheItem = Cache.get(cacheCandidate.key);\n    if (!cacheItem) {\n      cacheItem = new CacheItem(cacheCandidate);\n      debug.log(`Created new CacheItem for ${cacheCandidate.name} for ${cacheItem.utilities[0].utility.getStorageName()}`);\n      Cache.set(cacheItem);\n      return cacheItem;\n    }\n    debug.log(`Loaded prior CacheItem of ${cacheItem.name}\n     for ${cacheCandidate.utilities[0].utility.getStorageName()}`);\n    cacheItem.addTargets(cacheCandidate.targets);\n    cacheItem.addServices(cacheCandidate.services);\n    cacheItem.addUtilities(cacheCandidate.utilities);\n    Cache.set(cacheItem);\n    return cacheItem;\n  }\n\n  public static remove(cacheItem: CacheItem): boolean {\n    return Cache.items.delete(cacheItem.key);\n  }\n\n  public static get(key: string): CacheItem {\n    return Cache.items.get(key) as CacheItem;\n  }\n\n  protected static set(cacheItem: CacheItem): void {\n    if (!Cache.get(cacheItem.key)) {\n      debug.log('CacheItem for ' + cacheItem.key, cacheItem);\n    }\n    Cache.items.set(cacheItem.key, cacheItem);\n  }\n}\n\n// tslint:disable:only-arrow-functions\nexport class CacheItem implements CacheItemInterface {\n  public name: string = '';\n  public targets: Array<object> = [];\n  public services: Array<WebStorageServiceInterface> = [];\n  public utilities: Array<UtilityEntry> = [];\n  public currentTarget: object = {};\n  protected proxy: any = null;\n  protected _key: string = '';\n  protected initializedTargets: Set<object> = new Set();\n\n  constructor(cacheItem: CacheItemInterface) {\n    this._key = cacheItem.key;\n    this.name = cacheItem.name;\n    this.addTargets(cacheItem.targets);\n    this.addServices(cacheItem.services);\n    this.addUtilities(cacheItem.utilities);\n  }\n\n  public get key(): string {\n    return this._key;\n  }\n\n  public saveValue(value: any, config: DecoratorConfig = {}): any {\n    debug.groupCollapsed('CacheItem#saveValue for ' + this.key + ' in ' + this.currentTarget.constructor.name);\n    debug.log('new value: ', value);\n    // if (value === false && this.readValue() === true) debugger;\n    debug.log('previous value: ', this.readValue());\n    debug.log('targets.length: ', this.targets.length);\n    debug.log('currentTarget:', this.currentTarget);\n    debug.groupEnd();\n\n    // prevent overwriting value by initializators\n    if (!this.initializedTargets.has(this.currentTarget)) {\n      this.initializedTargets.add(this.currentTarget);\n      let readValue = this.readValue();\n      if (config.migrateKey) {\n        this.migrate(config, this.utilities[0].utility);\n        readValue = this.readValue();\n      }\n      const savedValue = (readValue !== null && readValue !== undefined) ? readValue : value;\n      let proxy = this.getProxy(savedValue, config);\n      proxy = (proxy !== null) ? proxy : value;\n      debug.log('initial value for ' + this.key + ' in ' + this.currentTarget.constructor.name, proxy);\n      this.propagateChange(savedValue);\n      return proxy;\n    }\n    this.propagateChange(value);\n    return this.getProxy(value, config);\n  }\n\n  public getProxy(value?: any, config: DecoratorConfig = {}): any {\n    if (value === undefined && this.proxy) {\n      return this.proxy;\n    } // return cached proxy if value hasn't changed\n    value = (value === undefined) ? this.readValue() : value;\n    if (typeof value !== 'object' || value === null) {\n      this.proxy = value;\n      return value;\n    }\n    if ((!Config.mutateObjects && !config.mutate) || config.mutate === false) {\n      return value;\n    }\n\n    const _self = this; // alias to use in standard function expressions\n    const prototype: any = Object.assign(new value.constructor(), value.__proto__);\n\n    prototype.save = function(): void { // add method for triggering force save\n      _self.saveValue(value, config);\n    };\n\n    // TODO set prototype for Array.prototype or something\n    if (Array.isArray(value)) { // handle methods that could change value of array\n      const methodsToOverwrite = [\n        'pop', 'push', 'reverse', 'shift', 'unshift', 'splice',\n        'filter', 'forEach', 'map', 'fill', 'sort', 'copyWithin',\n      ];\n      for (const method of methodsToOverwrite) {\n        prototype[method] = function(): void {\n          const readValue = _self.readValue();\n          // @ts-ignore\n          const result = Array.prototype[method].apply(readValue, arguments);\n          debug.log('Saving value for ' + _self.key + ' by method '\n            + prototype.constructor.name + '.' + method);\n          _self.saveValue(readValue, config);\n          return result;\n        };\n      }\n    }\n    Object.setPrototypeOf(value, prototype);\n    this.proxy = value;\n    return value;\n  }\n\n  public readValue(config: DecoratorConfig = {}): any {\n    const entry = this.utilities[0];\n    const value = entry ? entry.utility.get(this.key, entry.config) : null;\n    return (typeof value !== 'object') ? value : JSON.parse(JSON.stringify(this.getProxy(value, entry.config)));\n  }\n\n  public addTargets(targets: Array<any>): void {\n    targets.forEach(target => {\n      if (this.targets.indexOf(target) === -1) {\n        if (typeof target === 'object') { // handle Angular Component destruction\n          const originalFunction = target.ngOnDestroy;\n          const _self = this;\n          target.ngOnDestroy = function(): any {\n            if (typeof originalFunction === 'function') {\n              originalFunction.apply(this, arguments);\n            }\n            target.ngOnDestroy = originalFunction || function(): any {};\n\n            _self.initializedTargets.delete(target);\n            _self.targets = _self.targets.filter(t => t !== target);\n            if (!_self.targets.length) {\n              _self.services.forEach(service => {\n                service.keys = service.keys.filter(key => key !== _self._key);\n              });\n              _self.resetProxy();\n              Cache.remove(_self);\n            }\n            debug.groupCollapsed(`${_self.key} OnDestroy handler:`);\n            debug.log('removed target:', target.constructor.name);\n            debug.log('remaining targets:', _self.targets);\n            debug.log('cacheItem:', Cache.get(_self.key));\n            debug.groupEnd();\n          };\n          this.targets.push(target);\n        }\n      }\n    });\n  }\n\n  public addServices(services: Array<WebStorageServiceInterface>): void {\n    services.forEach(service => {\n      if (this.services.indexOf(service) === -1) {\n        service.keys.push(this._key);\n        this.services.push(service);\n      }\n    });\n  }\n\n  public addUtilities(utilityEntries: Array<UtilityEntry>): void {\n    utilityEntries.forEach(entry => {\n      if (this.utilities.findIndex(e => e.utility === entry.utility) === -1) {\n        this.utilities.push(entry);\n        entry.utility.set(this.key, this.readValue());\n      }\n    });\n  }\n\n  public resetProxy(): void {\n    this.proxy = null;\n  }\n\n  public propagateChange(value: any, source?: WebStorageUtility): void {\n    if (isEqual(value, this.readValue())) {\n      return;\n    }\n    this.utilities.forEach(entry => {\n      const utility = entry.utility;\n      // updating service which the change came from would affect in a cycle\n      if (utility === source) {\n        return;\n      }\n      debug.log(`propagating change on ${this.key} to:`, utility);\n      utility.set(this._key, value, entry.config);\n    });\n  }\n\n  protected migrate(config: DecoratorConfig, utility: WebStorageUtility): void {\n    const prefix = (config.prefix || Config.prefix) || '';\n    const keyExists = (key: string): boolean => key in utility.getStorage();\n    const migrateKey = keyExists(prefix + config.migrateKey!)\n      ? prefix + config.migrateKey!\n      : config.migrateKey!;\n    if (!keyExists(migrateKey)) {\n      return;\n    }\n    debug.log('Migrating', migrateKey, 'to', config.key, 'in', utility.getStorageName());\n    const value = utility.get(migrateKey, {...config, prefix: ''});\n    utility.set(this._key, value);\n    utility.remove(migrateKey, {prefix: ''});\n  }\n}\n","export class NgxStorageEvent<T = any> implements Omit<StorageEvent, 'oldValue' | 'newValue'> {\n  protected static initTimeStamp = Date.now();\n  public oldValue!: T;\n  public newValue!: T;\n  public NONE: any;\n  public timeStamp = (Date.now() - NgxStorageEvent.initTimeStamp);\n  public readonly bubbles = false;\n  public readonly cancelBubble = false;\n  public readonly cancelable = false;\n  public readonly composed = false;\n  public readonly currentTarget = window;\n  public readonly defaultPrevented = false;\n  public readonly eventPhase = 2;\n  public readonly isTrusted = true;\n  public readonly path = [window];\n  public readonly returnValue = true;\n  public readonly srcElement = window as any;\n  public readonly target = window;\n  public readonly url = window.location.href;\n  public isInternal = true;\n\n  constructor(public type: string, public key: string, public storageArea: Storage) {\n  }\n\n  /**\n   * Methods below exist only to satisfy TypeScript compiler\n   */\n  // tslint:disable:typedef\n  public get initEvent() {\n    return StorageEvent.prototype.initEvent.bind(this);\n  }\n\n  public get preventDefault() {\n    return StorageEvent.prototype.preventDefault.bind(this);\n  }\n\n  public get stopImmediatePropagation() {\n    return StorageEvent.prototype.stopImmediatePropagation.bind(this);\n  }\n\n  public get stopPropagation() {\n    return StorageEvent.prototype.stopPropagation.bind(this);\n  }\n\n  public get composedPath() {\n    return StorageEvent.prototype.composedPath.bind(this);\n  }\n\n  public get AT_TARGET() {\n    return StorageEvent.prototype.AT_TARGET;\n  }\n\n  public get BUBBLING_PHASE() {\n    return StorageEvent.prototype.BUBBLING_PHASE;\n  }\n\n  public get CAPTURING_PHASE() {\n    return StorageEvent.prototype.BUBBLING_PHASE;\n  }\n}\n","import { WebStorageService } from './webstorage.service';\nimport { Config } from '../config/config';\n\nconst _get = require('lodash.get');\nconst _set = require('lodash.set');\nconst _merge = require('lodash.merge');\n\nexport class Resource<T> {\n  constructor(protected service: WebStorageService, protected readonly key: string) {\n  }\n\n  protected _defaultValue: any = null;\n\n  /**\n   * Returns default value\n   * @returns {T}\n   */\n  public get defaultValue(): T {\n    return this._defaultValue;\n  }\n\n  protected _path: Array<string> = [];\n\n  /**\n   * Returns current path as a string\n   * @returns {string}\n   */\n  public get path(): string {\n    return this.pathString;\n  }\n\n  protected _prefix = Config.prefix;\n\n  /**\n   * Returns currently set prefix\n   * @returns {string}\n   */\n  public get prefix(): string {\n    return this._prefix || '';\n  }\n\n  /**\n   * Returns value taking path into account\n   * @returns {T}\n   */\n  public get value(): T {\n    return this.considerDefault(this.readValue());\n  }\n\n  protected get fullValue(): T {\n    return this.considerDefault(this.service.utility.get(this.key, {prefix: this._prefix}));\n  }\n\n  protected get pathString(): string {\n    return this._path.join('.');\n  }\n\n  /**\n   * Sets path of object property\n   * @param {string} path\n   * @returns {this}\n   */\n  public setPath(path: string): this {\n    this._path = path.split('.');\n    return this;\n  }\n\n  /**\n   * Appends current path\n   * e.g. if path('key') and appendPath('nested'), the path will be \"key.nested\"\n   * @param {string} path\n   * @returns {this}\n   */\n  public appendPath(path: string): this {\n    this._path.push(path);\n    return this;\n  }\n\n  /**\n   * Removes last item of path\n   * e.g. if path('key.nested') and truncatePath(), the path will be \"key\"\n   * @returns {this}\n   */\n  public truncatePath(): this {\n    this._path.pop();\n    return this;\n  }\n\n  /**\n   * Resets set path\n   * @returns {this}\n   */\n  public resetPath(): this {\n    this._path = [];\n    return this;\n  }\n\n  /**\n   * Sets prefix\n   * @param {string} prefix\n   * @returns {this}\n   */\n  public setPrefix(prefix: string): this {\n    this._prefix = prefix;\n    return this;\n  }\n\n  /**\n   * Moves storage item to new key using given prefix\n   * @param {string} prefix\n   * @returns {this}\n   */\n  public changePrefix(prefix: string): this {\n    this.service.utility.set(this.key, this.fullValue, {prefix});\n    this.service.utility.remove(this.key, {prefix: this._prefix});\n    return this.setPrefix(prefix);\n  }\n\n  /**\n   * Sets default value for both reading and saving operations\n   * @param defaultValue\n   * @returns {this}\n   */\n  public setDefaultValue(defaultValue: T): this {\n    this._defaultValue = defaultValue;\n    const value = this.readValue();\n    if (this.isNullOrUndefined(value)) {\n      this.save(defaultValue);\n    }\n    return this;\n  }\n\n  /**\n   * Creates or overrides value as a new entry or existing object property depending on path\n   * @param value\n   * @returns {this}\n   */\n  public save(value: T): this {\n    if (this.pathString) {\n      value = _set(this.fullValue as any as object, this.pathString, this.considerDefault(value)) as any as T;\n    }\n    this.service.utility.set(this.key, this.considerDefault(value), {prefix: this._prefix});\n    return this;\n  }\n\n  /**\n   * Updates existing object property using current path\n   * @param {T} value\n   * @returns {this}\n   */\n  public update(value: T): this {\n    return this.save(_merge(this.readValue(), value));\n  }\n\n  /**\n   * Removes item stored under current key\n   * @returns {this}\n   */\n  public remove(): this {\n    this.service.utility.remove(this.key);\n    return this;\n  }\n\n  protected considerDefault<S>(value: S): S {\n    return this.isNullOrUndefined(value) ? this._defaultValue : value;\n  }\n\n  protected isNullOrUndefined(value: any): boolean {\n    return (value === null || value === undefined);\n  }\n\n  protected readValue(): T {\n    const value = this.service.utility.get(this.key, {prefix: this._prefix});\n    if (this.pathString) {\n      return _get(value, this.pathString);\n    }\n    return value;\n  }\n}\n","import { Config, debug } from '../config/config';\nimport { ClearType, WebStorageConfigInterface } from '../config/config.interface';\nimport { WebStorageUtility } from '../utility/webstorage.utility';\nimport { WebStorageServiceInterface } from './webstorage.interface';\nimport { Cache } from '../decorator/cache';\nimport { Observable } from 'rxjs';\nimport { delay, filter } from 'rxjs/operators';\nimport { NgxStorageEvent } from '../utility/storage/storage-event';\nimport { Resource } from './resource';\nimport merge from 'lodash.merge';\n\n// const merge = require('lodash.merge');\n\nexport abstract class WebStorageService {\n  public static keys: Array<string> = [];\n  // @ts-ignore\n  protected _changes: Observable<NgxStorageEvent>;\n\n  protected constructor(public utility: WebStorageUtility) {\n  }\n\n  /**\n   * Gets keys for stored variables created by ngx-store,\n   * ignores keys that have not been created by decorators and have no prefix at once\n   */\n  public get keys(): Array<string> {\n    // get prefixed key if prefix is defined\n    const prefixKeys = this.utility.keys.filter(key => {\n      if (this.utility.prefix && this.utility.prefix.length) {\n        return key.startsWith(this.utility.prefix);\n      }\n      return true;\n    });\n    const decoratorKeys = (this.constructor as WebStorageServiceInterface).keys;\n    return prefixKeys.concat(decoratorKeys);\n  }\n\n  public get config(): WebStorageConfigInterface {\n    return Config;\n  }\n\n  public get(key: string): any {\n    return this.utility.get(key);\n  }\n\n  /**\n   * Returns new data Resource for given key exposing builder design pattern\n   * designed for complex nested data structures\n   */\n  public load(key: string): Resource<any> {\n    return new Resource(this, key);\n  }\n\n  public set<T>(key: string, value: T): T {\n    return this.utility.set(key, value) as T;\n  }\n\n  public update(key: string, changes: any): any {\n    const value = this.get(key);\n    if (value !== undefined && typeof value !== 'object') {\n      debug.throw(new Error(`Value stored under \"${key}\" key is not an object and tried to be updated.`));\n      return value;\n    }\n    return this.set(key, merge({}, value, changes));\n  }\n\n  // TODO return true if item existed and false otherwise (?)\n  public remove(key: string): void {\n    return this.utility.remove(key);\n  }\n\n  public observe(key?: string, exactMatch?: boolean): Observable<NgxStorageEvent> {\n    return this._changes.pipe(\n      filter((event: NgxStorageEvent) => {\n        if (!key) {\n          return true;\n        }\n        if (exactMatch) {\n          if (Config.prefix && key.startsWith(Config.prefix)) {\n            return event.key === key;\n          }\n          return event.key === Config.prefix + key;\n        } else {\n          return event.key?.indexOf(key) !== -1;\n        }\n      }),\n      delay(30), // event should come after actual data change and propagation\n    );\n  }\n\n  /**\n   * Clears chosen data from Storage\n   * @param clearType 'prefix' | 'decorators' | 'all'\n   * @param prefixOrClass defines the prefix or class (not its instance) whose decorators should be cleared\n   */\n  public clear(clearType?: ClearType, prefixOrClass?: string | object): void {\n    clearType = clearType || Config.clearType;\n    if (clearType === 'decorators') {\n      let keys = [];\n      if (typeof prefixOrClass === 'object') {\n        keys = this.keys.filter(key => Cache.get(key).targets.includes(prefixOrClass as object));\n        debug.log(this.utility.getStorageName() + ' > Removing decorated data from '\n          + prefixOrClass.constructor.name + ':', keys);\n      } else {\n        keys = this.keys;\n        debug.log(this.utility.getStorageName() + ' > Removing decorated data:', keys);\n      }\n      keys.forEach(key => this.remove(key));\n    } else if (clearType === 'prefix') {\n      prefixOrClass = prefixOrClass || this.utility.prefix;\n      this.utility.forEach((value, key) => {\n        if (key.startsWith(prefixOrClass as string)) {\n          this.remove(this.utility.trimPrefix(key));\n        }\n      });\n    } else if (clearType === 'all') {\n      this.utility.clear();\n    }\n  }\n\n  protected generateEvent(key: string, newValue: any, oldValue?: any): NgxStorageEvent {\n    const type = this.utility.getStorageName().charAt(0).toLowerCase() + this.utility.getStorageName().slice(1);\n    const event = new NgxStorageEvent(type, key, this.utility.getStorage());\n    event.oldValue = (oldValue !== undefined) ? oldValue : this.get(key);\n    event.newValue = newValue;\n    return event;\n  }\n\n  protected mapNativeEvent(ev: StorageEvent): NgxStorageEvent {\n    const event = this.generateEvent(\n      ev.key as string,\n      this.utility.getGettable(ev.newValue as string),\n      this.utility.getGettable(ev.oldValue as string));\n    event.isInternal = false;\n    return event;\n  }\n}\n","import { DecoratorConfig } from '../ngx-store.types';\nimport { WebStorage } from './storage/cookies-storage';\nimport { Cache } from '../decorator/cache';\nimport { CONFIG_PREFIX, debug } from '../config/config';\nimport { Observable, Subject } from 'rxjs';\nimport { NgxStorageEvent } from './storage/storage-event';\n\nexport type StorageName = 'localStorage' | 'sessionStorage' | 'cookiesStorage' | 'sharedStorage';\n\nexport class WebStorageUtility {\n  protected _storage: WebStorage;\n\n  public constructor(storage: WebStorage, prefix: string = '', previousPrefix?: string) {\n    this._storage = storage;\n    this._prefix = prefix;\n\n    // handle previousPrefix for backward-compatibility and safe config changes below\n    if (prefix === previousPrefix) {\n      return;\n    }\n    if (previousPrefix === null) {\n      return;\n    }\n    if (previousPrefix === undefined) {\n      return;\n    }\n    debug.log(this.getStorageName() + ' > Detected prefix change from ' + previousPrefix + ' to ' + prefix);\n    this.forEach((value, key) => {\n      // ignore config settings when previousPrefix = ''\n      if (key.startsWith(previousPrefix) && !key.startsWith(CONFIG_PREFIX)) {\n        const nameWithoutPrefix = this.trimPrefix(key);\n        this.set(nameWithoutPrefix, this._storage.getItem(key));\n\n        if (previousPrefix !== '') {\n          this._storage.removeItem(key);\n        }\n      }\n    });\n  }\n\n  protected _prefix: string = '';\n\n  public get prefix(): string {\n    return this._prefix;\n  }\n\n  protected _changes: Subject<NgxStorageEvent> = new Subject();\n\n  public get changes(): Observable<NgxStorageEvent> {\n    return this._changes.asObservable();\n  }\n\n  public get keys(): Array<string> {\n    const keys: Array<string> = [];\n    this.forEach((value, key) => keys.push(key));\n    return keys;\n  }\n\n  public static getSettable(value: any): string {\n    return JSON.stringify(value);\n  }\n\n  public static getGettable(value: string): any {\n    if (value === 'undefined') {\n      return null;\n    }\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      return value;\n    }\n  }\n\n  public getStorage(): WebStorage {\n    return this._storage;\n  }\n\n  public getStorageKey(key: string, prefix?: string): string {\n    prefix = (typeof prefix === 'string') ? prefix : this.prefix;\n    return `${prefix}${key}`;\n  }\n\n  public getStorageName(): StorageName {\n    return this._storage.type || ((this._storage === localStorage) ? 'localStorage' : 'sessionStorage');\n  }\n\n  public get(key: string, config: DecoratorConfig = {}): any {\n    const storageKey = this.getStorageKey(key, config.prefix);\n    const value = this._storage.getItem(storageKey);\n    // TODO return undefined if no key\n    /*if (value === null && !(storageKey in this._storage)) {\n      return undefined;\n    }*/\n    return this.getGettable(value as string);\n  }\n\n  public set<T>(key: string, value: T, config: DecoratorConfig = {}): T | null {\n    if (value === null || value === undefined) {\n      this.remove(key);\n      return null;\n    }\n    try {\n      const storageKey = this.getStorageKey(key, config.prefix);\n      const storable = this.getSettable(value);\n      this.emitEvent(key, value);\n      this._storage.setItem(storageKey, storable, config.expires);\n      const cacheItem = Cache.get(key);\n      if (cacheItem) {\n        debug.log(`updating following CacheItem from ${this.constructor.name}:`, cacheItem);\n        cacheItem.resetProxy();\n        cacheItem.propagateChange(value, this);\n      }\n    } catch (error) {\n      console.warn(`[ngx-store] ${this.getStorageName()}:\n             following error occurred while trying to save ${key} =`, value);\n      console.error(error);\n    }\n    return value;\n  }\n\n  // TODO return true if item existed and false otherwise (?)\n  public remove(key: string, config: DecoratorConfig = {}): void {\n    const storageKey = this.getStorageKey(key, config.prefix);\n    this._storage.removeItem(storageKey);\n    const cacheItem = Cache.get(key);\n    if (cacheItem) {\n      cacheItem.resetProxy();\n    }\n  }\n\n  public clear(): void {\n    this.emitEvent(null as any, null, null);\n    this.forEach((value, key) => {\n      if (key.startsWith(CONFIG_PREFIX)) {\n        return;\n      }\n      this.remove(key, {prefix: ''});\n    });\n  }\n\n  public forEach(callbackFn: (value: any, key: string) => any): void {\n    if (typeof this._storage.forEach === 'function') {\n      return this._storage.forEach((value: any, key: string) => {\n        callbackFn(this.getGettable(value), key);\n      });\n    }\n    Object.keys(this._storage).forEach((key) => {\n      callbackFn(this.getGettable(this._storage[key]), key);\n    });\n  }\n\n  public getSettable(value: any): string {\n    return WebStorageUtility.getSettable(value);\n  }\n\n  public getGettable(value: string): any {\n    return WebStorageUtility.getGettable(value);\n  }\n\n  public trimPrefix(key: string): string {\n    return key.replace(this.prefix, '');\n  }\n\n  protected emitEvent(key: string, newValue: any, oldValue?: any): void {\n    const event = new NgxStorageEvent(this.getStorageName(), key, this._storage);\n    event.oldValue = (oldValue !== undefined) ? oldValue : this.get(key);\n    event.newValue = newValue;\n    this._changes.next(event);\n  }\n}\n","import { NgxStorageEvent } from './storage-event';\nimport { Subject } from 'rxjs';\nimport { StorageName } from '../webstorage.utility';\n\n// TODO: in the future use ES6 Proxy to handle indexers\nexport abstract class NgxStorage implements Storage {\n  [key: string]: any;\n  [index: number]: string;\n  public externalChanges?: Subject<NgxStorageEvent> = new Subject();\n  public abstract setItem(key: string, value: any): void;\n  public abstract removeItem(key: string): void;\n  public abstract getItem(key: string): any;\n  public abstract key(index: number): any;\n  public abstract clear(): void;\n  public abstract get length(): number;\n  public abstract get type(): StorageName;\n\n  protected emitEvent(key: string, newValue: any, oldValue?: any): void {\n    const event = new NgxStorageEvent(this.type, key, this);\n    event.oldValue = (oldValue !== undefined) ? oldValue : this.getItem(key);\n    event.newValue = newValue;\n    event.isInternal = false;\n    this.externalChanges?.next(event);\n  }\n}\n","import { Config, debug } from '../../config/config';\nimport { NgxStorage } from './storage';\nimport { StorageName, WebStorageUtility } from '../webstorage.utility';\nimport { interval } from 'rxjs';\n\nexport interface WebStorage extends Storage {\n  setItem(key: string, data: string, expirationDate?: Date): void;\n}\n\nexport class CookiesStorage extends NgxStorage {\n  protected cachedCookieString: string = '';\n  protected cachedItemsMap: Map<string, string> = new Map();\n\n  constructor() {\n    super();\n    this.getAllItems();\n    if (Config.cookiesCheckInterval) {\n      interval(Config.cookiesCheckInterval)\n        .subscribe(() => {\n          if (!this.externalChanges?.observers.length) {\n            return; // don't run if there are no set subscriptions\n          }\n          this.getAllItems();\n        });\n    }\n  }\n\n  public get type(): StorageName {\n    return 'cookiesStorage';\n  }\n\n  public get length(): number {\n    return this.getAllKeys().length;\n  }\n\n  public key(index: number): string | any {\n    return this.getAllKeys()[index];\n  }\n\n  public getItem(key: string): string | any {\n    return this.getAllItems().get(key);\n  }\n\n  public removeItem(key: string): void {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    let domain = this.resolveDomain(Config.cookiesScope);\n    domain = (domain) ? 'domain=' + domain + ';' : '';\n    document.cookie = key + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/;' + domain;\n    this.cachedItemsMap.delete(key);\n  }\n\n  /**\n   * @param key\n   * @param value\n   * @param expirationDate passing null affects in lifetime cookie\n   */\n  public setItem(key: string, value: string, expirationDate?: Date): void {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    let domain = this.resolveDomain(Config.cookiesScope);\n    debug.log('Cookies domain:', domain);\n    domain = (domain) ? 'domain=' + domain + ';' : '';\n    let utcDate = '';\n    if (expirationDate instanceof Date) {\n      utcDate = expirationDate.toUTCString();\n    } else if (expirationDate === null) {\n      utcDate = 'Fri, 18 Dec 2099 12:00:00 GMT';\n    }\n    const expires = utcDate ? '; expires=' + utcDate : '';\n    const cookie = key + '=' + value + expires + ';path=/;' + domain;\n    debug.log('Cookie`s set instruction:', cookie);\n    this.cachedItemsMap.set(key, value);\n    document.cookie = cookie;\n  }\n\n  public clear(): void {\n    this.getAllKeys().forEach(key => this.removeItem(key));\n  }\n\n  public forEach(callbackFn: (value: string, key: string) => any): void {\n    return this.getAllItems().forEach((value, key) => callbackFn(value, key));\n  }\n\n  protected getAllKeys(): Array<string> {\n    return Array.from(this.getAllItems().keys());\n  }\n\n  // TODO: consider getting cookies from all paths\n  protected getAllItems(): Map<string, string> {\n    if (this.cachedCookieString === document.cookie) { // No changes\n      return this.cachedItemsMap;\n    }\n    const map = new Map();\n    if (typeof document === 'undefined') {\n      return map;\n    }\n    const cookies = document.cookie.split(';');\n\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      const eqPos = cookie.indexOf('=');\n      const key = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      const value = eqPos > -1 ? cookie.substr(eqPos + 1, cookie.length) : cookie;\n      map.set(key, value);\n    }\n    // detect changes and emit events\n    if (this.cachedItemsMap) {\n      map.forEach((value, key) => {\n        let cachedValue: any = this.cachedItemsMap.get(key);\n        cachedValue = (cachedValue !== undefined) ? cachedValue : null;\n        if (value !== cachedValue) {\n          this.emitEvent(\n            key,\n            WebStorageUtility.getGettable(value),\n            WebStorageUtility.getGettable(cachedValue),\n          );\n        }\n      });\n      this.cachedItemsMap.forEach((value, key) => {\n        if (!map.has(key)) {\n          this.emitEvent(key, null, WebStorageUtility.getGettable(value));\n        }\n      });\n    }\n    this.cachedCookieString = document.cookie;\n    return this.cachedItemsMap = map;\n  }\n\n  /**\n   * domain.com         + path=\".\"          = .domain.com\n   * domain.com         + path=\".sub.\"      = .sub.domain.com\n   * sub.domain.com     + path=\"sub.\"       = sub.domain.com\n   * www.sub.domain.com + path=\".\"          = .sub.domain.com\n   * localhost          + path=\".whatever.\" = localhost\n   * @param path\n   */\n  protected resolveDomain(path?: string): string {\n    if (!path) {\n      return '';\n    }\n    const hostname = document.domain;\n    if ((hostname.match(/\\./g) || []).length < 1) {\n      return '';\n    }\n    const www = (path[0] !== '.' && hostname.indexOf('www.') === 0) ? 'www.' : '';\n    return www + path + this.getDomain();\n  }\n\n  /**\n   * This function determines base domain by setting cookie at the highest level possible\n   * @url http://rossscrivener.co.uk/blog/javascript-get-domain-exclude-subdomain\n   */\n  protected getDomain(): string {\n    let i = 0;\n    let domain = document.domain;\n    const domainParts = domain.split('.');\n    const s = '_gd' + (new Date()).getTime();\n    while (i < (domainParts.length - 1) && document.cookie.indexOf(s + '=' + s) === -1) {\n      domain = domainParts.slice(-1 - (++i)).join('.');\n      document.cookie = s + '=' + s + ';domain=' + domain + ';';\n    }\n    document.cookie = s + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + domain + ';';\n    return domain;\n  }\n}\n\nexport const cookiesStorage = new CookiesStorage();\n","import { WebStorageUtility } from './webstorage.utility';\n\nexport class SharedStorageUtility extends WebStorageUtility {\n  public getSettable(value: any): any {\n    return value;\n  }\n\n  public getGettable(value: any): any {\n    return value;\n  }\n}\n","import { NgxStorage } from './storage';\nimport { StorageName } from '../webstorage.utility';\n\nexport class SharedStorage extends NgxStorage {\n  protected sharedMap: Map<string, any> = new Map();\n\n  constructor() {\n    super();\n    delete this.externalChanges;\n  }\n\n  public get type(): StorageName {\n    return 'sharedStorage';\n  }\n\n  public get length(): number {\n    return this.getAllKeys().length;\n  }\n\n  public key(index: number): string | any {\n    return this.getAllKeys()[index];\n  }\n\n  public getItem(key: string): any {\n    const value = this.sharedMap.get(key);\n    return (value !== undefined) ? value : null;\n  }\n\n  public removeItem(key: string): void {\n    this.sharedMap.delete(key);\n  }\n\n  public setItem(key: string, value: any): void {\n    this.sharedMap.set(key, value);\n  }\n\n  public clear(): void {\n    this.sharedMap.clear();\n  }\n\n  public forEach(func: (value: string, key: any) => any): void {\n    return this.sharedMap.forEach((value, key) => func(value, key));\n  }\n\n  protected getAllKeys(): Array<string> {\n    return Array.from(this.sharedMap.keys());\n  }\n}\n\nexport const sharedStorage = new SharedStorage();\n","import { Config } from '../config/config';\nimport { WebStorageUtility } from './webstorage.utility';\nimport { cookiesStorage } from './storage/cookies-storage';\nimport { SharedStorageUtility } from './shared-storage.utility';\nimport { sharedStorage } from './storage/shared-storage';\n\nexport const localStorageUtility: WebStorageUtility =\n  new WebStorageUtility(localStorage, Config.prefix, Config.previousPrefix);\nexport const sessionStorageUtility: WebStorageUtility =\n  new WebStorageUtility(sessionStorage, Config.prefix, Config.previousPrefix);\nexport const cookiesStorageUtility: WebStorageUtility =\n  new WebStorageUtility(cookiesStorage, Config.prefix, Config.previousPrefix);\nexport const sharedStorageUtility: SharedStorageUtility =\n  new SharedStorageUtility(sharedStorage, Config.prefix, Config.prefix);\n","import { WebStorageService } from './webstorage.service';\nimport { localStorageUtility } from '../utility/index';\nimport { Injectable } from '@angular/core';\nimport { fromEvent, merge } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { NgxStorageEvent } from '../utility/storage/storage-event';\n\n@Injectable()\nexport class LocalStorageService extends WebStorageService {\n  public static keys: Array<string> = [];\n\n  constructor() {\n    super(localStorageUtility);\n    this._changes =\n      merge(fromEvent<NgxStorageEvent>(window, 'storage')\n          .pipe(\n            filter((event: NgxStorageEvent) => event.storageArea === localStorage),\n            map((event: NgxStorageEvent) => this.mapNativeEvent(event)),\n          ),\n        localStorageUtility.changes);\n  }\n}\n","import { WebStorageService } from './webstorage.service';\nimport { sessionStorageUtility } from '../utility/index';\nimport { Injectable } from '@angular/core';\nimport { fromEvent, merge } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { NgxStorageEvent } from '../utility/storage/storage-event';\n\n@Injectable()\nexport class SessionStorageService extends WebStorageService {\n  public static keys: Array<string> = [];\n\n  constructor() {\n    super(sessionStorageUtility);\n    this._changes =\n      merge(fromEvent<NgxStorageEvent>(window, 'storage')\n          .pipe(\n            filter((event: NgxStorageEvent) => event.storageArea === sessionStorage),\n            map((event: NgxStorageEvent) => this.mapNativeEvent(event)),\n          ),\n        sessionStorageUtility.changes);\n  }\n}\n","import { cookiesStorage } from '../utility/storage/cookies-storage';\nimport { WebStorageService } from './webstorage.service';\nimport { cookiesStorageUtility } from '../utility';\nimport { merge } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookiesStorageService extends WebStorageService {\n  public static keys: Array<string> = [];\n\n  constructor() {\n    super(cookiesStorageUtility);\n    this._changes = !cookiesStorage.externalChanges ? cookiesStorageUtility.changes\n      : merge(cookiesStorage.externalChanges?.asObservable(), cookiesStorageUtility.changes);\n  }\n\n  public set<T>(key: string, value: T, expirationDate?: Date): T {\n    return this.utility.set(key, value, {expires: expirationDate}) as T;\n  }\n}\n","import { WebStorageService } from './webstorage.service';\nimport { sharedStorageUtility } from '../utility';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SharedStorageService extends WebStorageService {\n  public static keys: Array<string> = [];\n\n  constructor() {\n    super(sharedStorageUtility);\n    this._changes = sharedStorageUtility.changes;\n  }\n}\n","// tslint:disable:only-arrow-functions\nimport { LocalStorageService } from '../service/local-storage.service';\nimport { SessionStorageService } from '../service/session-storage.service';\nimport { CookiesStorageService } from '../service/cookies-storage.service';\nimport { WebStorageServiceInterface } from '../service/webstorage.interface';\nimport { cookiesStorageUtility, localStorageUtility, sessionStorageUtility, sharedStorageUtility } from '../utility';\nimport { SharedStorageService } from '../service/shared-storage.service';\nimport { WebStorageUtility } from '../utility/webstorage.utility';\nimport { Cache } from './cache';\nimport {\n  CookieStorageDecoratorConfig,\n  DecoratorConfig,\n  LocalStorageDecoratorConfig,\n  SessionStorageDecoratorConfig,\n  WebStorageDecoratorConfig,\n} from '../ngx-store.types';\n\nexport type DecoratorReturn = (target: any, propertyName: string) => void;\n\nexport function LocalStorage(keyOrConfig?: string | LocalStorageDecoratorConfig,\n                             config?: LocalStorageDecoratorConfig): DecoratorReturn {\n  return WebStorage(localStorageUtility, LocalStorageService, keyOrConfig!, config);\n}\n\nexport function SessionStorage(keyOrConfig?: string | SessionStorageDecoratorConfig,\n                               config?: SessionStorageDecoratorConfig): DecoratorReturn {\n  return WebStorage(sessionStorageUtility, SessionStorageService, keyOrConfig!, config);\n}\n\nexport function CookieStorage(keyOrConfig?: string | CookieStorageDecoratorConfig,\n                              config?: CookieStorageDecoratorConfig): DecoratorReturn {\n  return WebStorage(cookiesStorageUtility, CookiesStorageService, keyOrConfig!, config);\n}\n\nexport function SharedStorage(keyOrConfig?: string | WebStorageDecoratorConfig,\n                              config?: WebStorageDecoratorConfig): DecoratorReturn {\n  return WebStorage(sharedStorageUtility, SharedStorageService, keyOrConfig!, config);\n}\n\nfunction WebStorage(\n  webStorageUtility: WebStorageUtility,\n  service: WebStorageServiceInterface,\n  keyOrConfig: string | DecoratorConfig,\n  config: DecoratorConfig = {},\n): DecoratorReturn {\n  return (target: any, propertyName: string): void => {\n    let key: string = '';\n    if (typeof keyOrConfig === 'object') {\n      key = keyOrConfig.key || '';\n      config = keyOrConfig;\n    } else if (typeof keyOrConfig === 'string') {\n      key = keyOrConfig;\n    }\n    key = key || config.key || propertyName;\n\n    let cacheItem = Cache.getCacheFor({\n      key,\n      name: propertyName,\n      targets: [target],\n      services: [service],\n      utilities: [{\n        utility: webStorageUtility,\n        config,\n      }],\n    });\n\n    Object.defineProperty(target, propertyName, {\n      get: function(): any { // tslint:disable-line\n        return cacheItem.getProxy(undefined, config);\n      },\n      set: function(value: any): void { // tslint:disable-line\n        if (!Cache.get(cacheItem.key)) {\n          cacheItem = Cache.getCacheFor(cacheItem);\n        }\n        cacheItem.addTargets([target]);\n        cacheItem.currentTarget = target;\n        cacheItem.saveValue(value, config);\n      },\n      configurable: true,\n    });\n    return target;\n  };\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { LocalStorageService } from './service/local-storage.service';\nimport { SessionStorageService } from './service/session-storage.service';\nimport { CookiesStorageService } from './service/cookies-storage.service';\nimport { SharedStorageService } from './service/shared-storage.service';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    LocalStorageService,\n    SessionStorageService,\n    CookiesStorageService,\n    SharedStorageService,\n  ],\n})\nexport class NgxStoreModule {\n  // methods for future use\n  public static forRoot(): ModuleWithProviders<NgxStoreModule> {\n    return {\n      ngModule: NgxStoreModule,\n    };\n  }\n\n  public static forChild(): typeof NgxStoreModule {\n    return NgxStoreModule;\n  }\n}\n"]}