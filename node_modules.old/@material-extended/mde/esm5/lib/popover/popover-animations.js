import { trigger, state, style, animate, transition, } from '@angular/animations';
/**
 * Below are all the animations for the md-popover component.
 * Animation duration and timing values are based on AngularJS Material.
 */
/**
 * This animation controls the popover panel's entry and exit from the page.
 *
 * When the popover panel is added to the DOM, it scales in and fades in its border.
 *
 * When the popover panel is removed from the DOM, it simply fades out after a brief
 * delay to display the ripple.
 */
export var transformPopover = trigger('transformPopover', [
    state('enter', style({
        opacity: 1,
        transform: "scale(1)"
    })),
    transition('void => *', [
        style({
            opacity: 0,
            transform: "scale(0)"
        }),
        animate("200ms cubic-bezier(0.25, 0.8, 0.25, 1)")
    ]),
    transition('* => void', [
        animate('50ms 100ms linear', style({ opacity: 0 }))
    ])
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1hbmltYXRpb25zLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG1hdGVyaWFsLWV4dGVuZGVkL21kZS8iLCJzb3VyY2VzIjpbImxpYi9wb3BvdmVyL3BvcG92ZXItYW5pbWF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsT0FBTyxFQUNQLEtBQUssRUFDTCxLQUFLLEVBQ0wsT0FBTyxFQUNQLFVBQVUsR0FFWCxNQUFNLHFCQUFxQixDQUFDO0FBRTdCOzs7R0FHRztBQUVIOzs7Ozs7O0dBT0c7QUFFSCxNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBNkIsT0FBTyxDQUFDLGtCQUFrQixFQUFFO0lBQ3BGLEtBQUssQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDO1FBQ25CLE9BQU8sRUFBRSxDQUFDO1FBQ1YsU0FBUyxFQUFFLFVBQVU7S0FDdEIsQ0FBQyxDQUFDO0lBQ0gsVUFBVSxDQUFDLFdBQVcsRUFBRTtRQUN0QixLQUFLLENBQUM7WUFDSixPQUFPLEVBQUUsQ0FBQztZQUNWLFNBQVMsRUFBRSxVQUFVO1NBQ3RCLENBQUM7UUFDRixPQUFPLENBQUMsd0NBQXdDLENBQUM7S0FDbEQsQ0FBQztJQUNGLFVBQVUsQ0FBQyxXQUFXLEVBQUU7UUFDdEIsT0FBTyxDQUFDLG1CQUFtQixFQUFFLEtBQUssQ0FBQyxFQUFDLE9BQU8sRUFBRSxDQUFDLEVBQUMsQ0FBQyxDQUFDO0tBQ2xELENBQUM7Q0FDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICB0cmlnZ2VyLFxuICBzdGF0ZSxcbiAgc3R5bGUsXG4gIGFuaW1hdGUsXG4gIHRyYW5zaXRpb24sXG4gIEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YSxcbn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5cbi8qKlxuICogQmVsb3cgYXJlIGFsbCB0aGUgYW5pbWF0aW9ucyBmb3IgdGhlIG1kLXBvcG92ZXIgY29tcG9uZW50LlxuICogQW5pbWF0aW9uIGR1cmF0aW9uIGFuZCB0aW1pbmcgdmFsdWVzIGFyZSBiYXNlZCBvbiBBbmd1bGFySlMgTWF0ZXJpYWwuXG4gKi9cblxuLyoqXG4gKiBUaGlzIGFuaW1hdGlvbiBjb250cm9scyB0aGUgcG9wb3ZlciBwYW5lbCdzIGVudHJ5IGFuZCBleGl0IGZyb20gdGhlIHBhZ2UuXG4gKlxuICogV2hlbiB0aGUgcG9wb3ZlciBwYW5lbCBpcyBhZGRlZCB0byB0aGUgRE9NLCBpdCBzY2FsZXMgaW4gYW5kIGZhZGVzIGluIGl0cyBib3JkZXIuXG4gKlxuICogV2hlbiB0aGUgcG9wb3ZlciBwYW5lbCBpcyByZW1vdmVkIGZyb20gdGhlIERPTSwgaXQgc2ltcGx5IGZhZGVzIG91dCBhZnRlciBhIGJyaWVmXG4gKiBkZWxheSB0byBkaXNwbGF5IHRoZSByaXBwbGUuXG4gKi9cblxuZXhwb3J0IGNvbnN0IHRyYW5zZm9ybVBvcG92ZXI6IEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YSA9IHRyaWdnZXIoJ3RyYW5zZm9ybVBvcG92ZXInLCBbXG4gIHN0YXRlKCdlbnRlcicsIHN0eWxlKHtcbiAgICBvcGFjaXR5OiAxLFxuICAgIHRyYW5zZm9ybTogYHNjYWxlKDEpYFxuICB9KSksXG4gIHRyYW5zaXRpb24oJ3ZvaWQgPT4gKicsIFtcbiAgICBzdHlsZSh7XG4gICAgICBvcGFjaXR5OiAwLFxuICAgICAgdHJhbnNmb3JtOiBgc2NhbGUoMClgXG4gICAgfSksXG4gICAgYW5pbWF0ZShgMjAwbXMgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSlgKVxuICBdKSxcbiAgdHJhbnNpdGlvbignKiA9PiB2b2lkJywgW1xuICAgIGFuaW1hdGUoJzUwbXMgMTAwbXMgbGluZWFyJywgc3R5bGUoe29wYWNpdHk6IDB9KSlcbiAgXSlcbl0pO1xuIl19