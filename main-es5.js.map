{"version":3,"sources":["webpack:///src/app/truncate.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/app/marked.pipe.ts","webpack:///src/app/unit-table/unit-table.component.ts","webpack:///src/app/unit-table/unit-table.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/changelog/changelog.component.ts","webpack:///src/app/changelog/changelog.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/unit-table/unit-table-datasource.ts","webpack:///src/app/effect.pipe.ts","webpack:///src/app/decorate.pipe.ts","webpack:///src/app/filters/filters.component.ts","webpack:///src/app/filters/filters.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["MAX_LENGTH","TruncatePipe","s","length","substring","name","environment","production","MarkedPipe","value","UnitTableComponent","dataSource","displayedColumns","sortingDataAccessor","item","property","stats","hp","atk","rcv","def","spd","type","rumbleType","sort","paginator","table","event","filterValue","target","filter","trim","toLowerCase","applyFilter","selector","templateUrl","styleUrls","AppComponent","title","ChangelogComponent","http","changeLogText","options","responseType","get","subscribe","data","AppModule","declarations","imports","providers","bootstrap","UnitDetails","UnitTableDataSource","database","filterChainSubject","unit","isBaseForm","unitDetail","unitDetails","units","i","window","incomplete","id","complete","push","evolutions","baseHp","baseAtk","baseRcv","Array","isArray","class1","class2","baseUnit","find","u","basedOn","undefined","console","log","JSON","parse","stringify","error","ud","includes","denormalizeEffects","ability","special","lvl5Ability","effects","lvl10Special","lvl10Cooldown","cooldown","thumbnailUrl","Utils","getThumbnailUrl","replace","filterData","levels","lastEffect","mergedEffect","forEach","level","levelIdx","effect","effectIdx","override","tmpData","unitFilter","_updateChangeSubscription","providedIn","numberFormatter","Intl","NumberFormat","listFormatter","ListFormat","EffectPipe","e","conditionToString","condition","arrayToString","attributes","format","amount","chance","tmpStr","targetToString","targeting","rangeToString","range","duration","array","stat","comparator","count","size","direction","targetStr","targets","priority","DecoratePipe","getImageString","FiltersComponent","dataService","statType","statBaseValue","hideBaseForms","style","buffs","debuffs","damage","recharge","boons","hinderances","formId","next","computeFilterChain","form","controls","formFields","filterChain","unitFunc","some","attribute","effectType","effectFunc","handleFormChange","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nconst MAX_LENGTH = 35;\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n\n  transform(s: string): string {\n    if (s.length < MAX_LENGTH){\n      return s;\n    }\n    // return '<span matTooltip=\"'+s+'\">'+s.substring(0,37)+'...</span>';\n    return s.substring(0, MAX_LENGTH - 3) + '...';\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as marked from 'marked';\n\n@Pipe({\n  name: 'marked'\n})\nexport class MarkedPipe implements PipeTransform {\n  transform(value: any): any {\n    if (value && value.length > 0) {\n      return marked(value);\n    }\n    return value;\n  }\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { UnitTableDataSource } from './unit-table-datasource';\nimport { Unit } from '../model/rumble';\n\n@Component({\n  selector: 'app-unit-table',\n  templateUrl: './unit-table.component.html',\n  styleUrls: ['./unit-table.component.css']\n})\nexport class UnitTableComponent implements AfterViewInit, OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatTable) table: MatTable<Unit>;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name', 'type', 'baseHp', 'baseAtk', 'baseRcv', 'baseDef', 'baseSpd', 'lvl10Special', 'lvl10Cooldown', 'lvl5Ability'];\n\n  constructor(public dataSource: UnitTableDataSource) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sortingDataAccessor = (item, property) => {\n      switch (property) {\n        case 'baseHp': return item.stats.hp;\n        case 'baseAtk': return item.stats.atk;\n        case 'baseRcv': return item.stats.rcv;\n        case 'baseDef': return item.stats.def;\n        case 'baseSpd': return item.stats.spd;\n        case 'type':\n          switch (item.stats.type) {\n            case 'STR': return 1;\n            case 'DEX': return 2;\n            case 'QCK': return 3;\n            case 'PSY': return 4;\n            case 'INT': return 5;\n            case 'DUAL': return 0;\n            default: return 99;\n          }\n        case 'style': return item.stats.rumbleType; // Rename later\n\n        default: return item[property];\n      }\n    };\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.table.dataSource = this.dataSource;\n  }\n\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","<div class=\"mat-elevation-z8\">\n  <mat-form-field style=\"width:25vw\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Enter a unit name, a stat, a type; all columns are filtered.\" #input>\n  </mat-form-field>\n\t<table mat-table class=\"full-width-table\" matSort aria-label=\"Pirate Rumble Units\" [dataSource]=\"dataSource\">\n\t\t<ng-container matColumnDef=\"id\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <div class=\"thumbnail\">\n          <a href=\"http://optc-db.github.io/characters/#/view/{{row.id}}\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <img src=\"{{row.thumbnailUrl}}\" height=\"64em\" width=\"64em\" style=\"\"/>\n          <div class=\"idNumber\">{{row.id}}\n          </div></a>\n        </div>\n      </td>\n      <!-- <td mat-cell *matCellDef=\"let row\" [matTooltip]=\"background-position: center; background-repeat: no-repeat; background-size: cover; backgroud-image: url('https://onepiece-treasurecruise.com/wp-content/uploads/sites/2/f{{('0000' + row.id).slice(-4)}}.png');\"><a href=\"http://optc-db.github.io/characters/#/view/{{row.id}}\" target=\"_blank\" rel=\"noopener noreferrer\">{{row.id}}</a></td> -->\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"name\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\"><a href=\"http://optc-db.github.io/characters/#/view/{{row.id}}\" target=\"_blank\" rel=\"noopener noreferrer\">{{row.name}}</a></td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"type\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\" [innerHTML]=\"row.stats.type | decorate\"></td>\n\t\t</ng-container>\n    <!--\n\t\t<ng-container matColumnDef=\"style\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Rumble Type</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{row.stats.rumbleType}}</td>\n\t\t</ng-container>\n    -->\n\t\t<!--\n<ng-container matColumnDef=\"targets\"><th mat-header-cell *matHeaderCellDef mat-sort-header>targets</th><td mat-cell *matCellDef=\"let row\">{{row.targets}}</td></ng-container>\n-->\n\t\t<ng-container matColumnDef=\"baseHp\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>HP</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{row.stats.hp | number}}</td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"baseAtk\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>ATK</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{row.stats.atk | number}}</td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"baseRcv\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>RCV</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{row.stats.rcv | number}}</td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"baseDef\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>DEF</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{row.stats.def | number}}</td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"baseSpd\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>SPD</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{row.stats.spd | number}}</td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"lvl10Special\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-header>Special (Max)</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\"><ul class=\"effect\"><span *ngFor=\"let effect of row.lvl10Special\" [innerHTML]=\"effect | effect\"></span></ul></td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"lvl10Cooldown\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header>CT (Max)</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\">{{row.lvl10Cooldown | number}}</td>\n\t\t</ng-container>\n\t\t<ng-container matColumnDef=\"lvl5Ability\">\n\t\t\t<th mat-header-cell *matHeaderCellDef mat-header>Ability (Max)</th>\n\t\t\t<td mat-cell *matCellDef=\"let row\"><ul><span *ngFor=\"let effect of row.lvl5Ability\" [innerHTML]=\"effect | effect\"></span></ul></td>\n\t\t</ng-container>\n\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    <tr mat-row *matNoDataRow><td class=\"mat-cell\" colspan=\"4\">No data matching the filter</td></tr>\n\t</table>\n\t<mat-paginator #paginator\n      [length]=\"dataSource?.data.length\"\n      [pageIndex]=\"0\"\n      [pageSize]=\"50\"\n      [pageSizeOptions]=\"[25, 50, 100, 250]\"></mat-paginator>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'OPTC Pirate Rumble Database';\n}\n","<mat-sidenav-container>\n  <mat-sidenav #filters mode=\"side\" opened fixedInViewport style=\"max-width:255px\">\n    <app-filters></app-filters>\n    <mat-divider></mat-divider>\n    <app-changelog></app-changelog>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <p>\n      <mat-toolbar>\n        <button (click)=\"filters.toggle()\" mat-icon-button color=\"basic\" aria-label=\"Example icon button with a menu icon\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <span>OPTC Pirate Rumble Database</span>\n      </mat-toolbar>\n    </p>\n    <app-unit-table></app-unit-table>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-changelog',\n  templateUrl: './changelog.component.html',\n  styleUrls: ['./changelog.component.css']\n})\nexport class ChangelogComponent implements OnInit {\n\n  changeLogText = 'Could not load changelog';\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    const options = {\n      responseType: 'text' as const,\n    };\n    this.http.get('./CHANGELOG.md', options).subscribe(data => this.changeLogText = data);\n  }\n\n  public getChangeLog(): string {\n    return this.changeLogText;\n  }\n\n}\n","<mat-expansion-panel>\n  <mat-expansion-panel-header>\n    <mat-panel-title>\n      Change Log\n    </mat-panel-title>\n  </mat-expansion-panel-header>\n  <mat-card>\n    <mat-card-content [innerHTML]=\"getChangeLog() | marked\"></mat-card-content>\n  </mat-card>\n</mat-expansion-panel>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FiltersComponent } from './filters/filters.component';\nimport { ChangelogComponent } from './changelog/changelog.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UnitTableComponent } from './unit-table/unit-table.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MarkedPipe } from './marked.pipe';\nimport { EffectPipe } from './effect.pipe';\nimport { TruncatePipe } from './truncate.pipe';\nimport { DecoratePipe } from './decorate.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FiltersComponent,\n    ChangelogComponent,\n    UnitTableComponent,\n    MarkedPipe,\n    TruncatePipe,\n    EffectPipe,\n    DecoratePipe\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    MatSortModule,\n    MatButtonToggleModule,\n    MatButtonModule,\n    MatCardModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSlideToggleModule,\n    MatSidenavModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Observable, of as observableOf, merge } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport * as rumble from '../model/rumble';\nimport rumbleData from '../../assets/data/rumble.json';\n\ndeclare const window: any;\n\nexport class UnitDetails {\n  complete: boolean;\n  id: number;\n  isBaseForm: boolean;\n  name: string;\n  baseHp: number;\n  baseAtk: number;\n  baseRcv: number;\n  baseDef: number;\n  baseSpd: number;\n  style: string;\n  type: string;\n  class1: string;\n  class2: string;\n  festAbility: string;\n  festSpecial: string;\n  festCooldown: string;\n  festAttackPattern: string;\n  festAttackTarget: string;\n\n/*\n  private computeDefPercentage(): number {\n    return 9.6671298720642E-17 * this.baseDef ** 6\n            - 2.54940335570173E-13 * this.baseDef ** 5\n            + 0.000000000265685114974299 * this.baseDef ** 4\n            - 0.000000135059490498531 * this.baseDef ** 3\n            + 0.000030881486606793 * this.baseDef ** 2\n            - 0.000309272395298876 * this.baseDef\n            + 0.00126339332598491 * 100;\n  }\n\n  public getId(): number { return this.id; }\n  public getName(): string { return this.name; }\n  public getBaseHp(): number { return this.baseHp; }\n  public getBaseAtk(): number { return this.baseAtk; }\n  public getBaseRcv(): number { return this.baseRcv; }\n  public getBaseDef(): number { return Math.round((this.computeDefPercentage() + Number.EPSILON) * 100) / 100; }\n  public getBaseSpd(): number { return this.baseSpd; }\n  public getstyle(): string { return this.style; }\n  public getType(): string { return '<span class=\"badge text-monospace badge-pill ' + this.type + '\">' + this.type + '</span>'; }\n  public getFestAbility(): string { return this.encodeText(this.festAbility[4].description); }\n  public getFestSpecial(): string { return this.encodeText(this.festSpecial[9].description); }\n  public getFestAttackPattern(): string { return this.festAttackPattern; }\n  public getFestAttackTarget(): string { return this.festAttackTarget; }\n\n  private encodeText(s: string): string\n  {\n    return s.replace(/\\[([A-Z]+)\\]/gi,\n                     '<span class=\"badge text-monospace badge-pill $1\">$1</span>');\n  }\n  */\n}\n\n/**\n * Data source for the UnitTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\n@Injectable({\n   providedIn: 'root'\n })\nexport class UnitTableDataSource extends MatTableDataSource<rumble.Unit> {\n  database: rumble.Unit[] = [];\n\n  filterChainSubject: BehaviorSubject<((unit: rumble.Unit) => boolean) []>\n   = new BehaviorSubject<((unit: rumble.Unit) => boolean) []>([unit => !unit.isBaseForm]);\n\n  constructor() {\n    super();\n\n    let unitDetail: UnitDetails;\n    const unitDetails: UnitDetails[] = [];\n    let unit: rumble.Unit;\n    const units: rumble.Entry[] = rumbleData.units as rumble.Entry[];\n\n    for (let i = 0; i < window.units.length; i++){\n      if (i === 3134 || i === 3133) { // Deal with VS unit later\n        continue;\n      }\n      if (window.units[i].incomplete ){\n          continue;\n      }\n      unitDetail = new UnitDetails();\n      unitDetail.id = i + 1;\n      unitDetail.complete = !window.units[i].incomplete;\n      if (!unitDetail.complete) {\n        unitDetails.push(unitDetail);\n        continue;\n      }\n      unitDetail.isBaseForm = window.evolutions[i + 1];\n      unitDetail.name = window.units[i][0];\n      unitDetail.baseHp = window.units[i][12];\n      unitDetail.baseAtk = window.units[i][13];\n      unitDetail.baseRcv = window.units[i][14];\n      unitDetail.type = Array.isArray(window.units[i][1]) ? 'DUAL' : window.units[i][1];\n      if (Array.isArray(window.units[i][2])) {\n        if (Array.isArray(window.units[i][2][0])) { // dual unit\n          unitDetail.class1 = window.units[i][2][2][0];\n          unitDetail.class2 = window.units[i][2][2][1];\n        } else { // Double class Unit\n          unitDetail.class1 = window.units[i][2][0];\n          unitDetail.class2 = window.units[i][2][1];\n        }\n      } else { // Single class unit\n        unitDetail.class1 = window.units[i][2];\n      }\n      unitDetails.push(unitDetail);\n    }\n\n    for (let i = 0; i < units.length; i++){\n      if ('basedOn' in units[i]) {\n        const baseUnit: rumble.Unit = units.find(u => u.id === (units[i] as rumble.Reference).basedOn) as rumble.Unit;\n        if (baseUnit === null || baseUnit === undefined) {\n          console.log( ' Failed to locate Base Unit!!!!!!! ' + i);\n          console.log(units[i]);\n          continue;\n        }\n        try {\n          unit = JSON.parse(JSON.stringify(baseUnit));\n        } catch (error) {\n          console.log('invalid JSON: ' + baseUnit);\n          continue;\n        }\n        unit.id = units[i].id;\n      } else {\n        unit = (JSON.parse(JSON.stringify(units[i])) as rumble.Unit);\n      }\n      unitDetail = unitDetails.find(ud => ud.id === unit.id);\n      if (unitDetail === null) {\n        console.log( ' Failed to locate Base Unit Details!!!!!!!!!!! ' + i);\n        console.log(unit);\n        continue;\n      }\n      if (!unitDetail.complete){\n        console.log( 'Skipping unit ' + unit.id + ', the unit is not complete.');\n        continue;\n      }\n      if (unitDetail.name.includes('[Dual Unit] ')) {\n        continue;\n      }\n\n      this.denormalizeEffects(unit.ability);\n      this.denormalizeEffects(unit.special);\n\n      unit.name = unitDetail.name;\n      unit.isBaseForm = unitDetail.isBaseForm;\n      unit.stats.hp = unitDetail.baseHp;\n      unit.stats.atk = unitDetail.baseAtk;\n      unit.stats.rcv = unitDetail.baseRcv;\n      unit.stats.type = unitDetail.type;\n      unit.stats.class1 = unitDetail.class1;\n      unit.stats.class2 = unitDetail.class2;\n\n      unit.lvl5Ability = (unit.ability[4].effects as rumble.Effect[]);\n      unit.lvl10Special = (unit.special[9].effects as rumble.Effect[]);\n      unit.lvl10Cooldown = unit.special[9].cooldown;\n      unit.thumbnailUrl = window.Utils.getThumbnailUrl(unit.id).replace('..', 'https://optc-db.github.io/');\n      this.database.push(unit);\n    }\n\n    this.filterData();\n\n  }\n\n  denormalizeEffects(levels: rumble.Ability[]|rumble.Special[]): void {\n    const lastEffect: rumble.Effect[] = [];\n    let mergedEffect: rumble.Effect[] = [];\n\n    levels.forEach( (level, levelIdx) => {\n      mergedEffect = [...lastEffect];\n      level.effects.forEach((effect: rumble.Effect | rumble.EffectOverride, effectIdx) => {\n        if ('effect' in effect) {\n          lastEffect[effectIdx] = (effect as rumble.Effect);\n          mergedEffect[effectIdx] = (effect as rumble.Effect);\n        } else if ('override' in effect){\n          mergedEffect[effectIdx] = {...lastEffect[effectIdx], ...(effect as rumble.EffectOverride).override};\n        }\n      });\n      level.effects = mergedEffect;\n    });\n  }\n\n  filterData(): void {\n    let tmpData: rumble.Unit[] = this.database;\n    this.filterChainSubject.value.forEach(unitFilter => tmpData = tmpData.filter(unitFilter));\n    this.data = tmpData;\n    this._updateChangeSubscription();\n  }\n}\n","import \"intl-list-format\";\nimport \"intl-list-format/locale-data/en\";\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Effect } from './model/rumble';\n\ndeclare namespace Intl {\n    function getCanonicalLocales(locales: string | string[]): string[];\n\n    class ListFormat {\n        constructor();\n\n        format(a: any): any;\n    }\n    class NumberFormat {\n            constructor();\n\n            format(a: any): any;\n        }\n}\n\nconst numberFormatter: Intl.NumberFormat = new Intl.NumberFormat();\nconst listFormatter: Intl.ListFormat = new Intl.ListFormat();\n\n@Pipe({\n  name: 'effect'\n})\nexport class EffectPipe implements PipeTransform {\n\n  transform(effect: Effect): string {\n    let e = '<li>';\n    e += this.conditionToString(effect.condition);\n    switch (effect.effect) {\n      case 'buff':\n        e += 'Applies Lv.' + effect.level + ' ' + this.arrayToString(effect.attributes) + ' up buff';\n        break;\n      case 'debuff':\n        e += 'Inflicts Lv.' + effect.level + ' ' + this.arrayToString(effect.attributes) + ' down debuff';\n        break;\n      case 'damage':\n        switch (effect.type){\n          case 'time':\n            e += 'Deals Lv.' + effect.level + ' Damage Over Time';\n            break;\n          case 'atk':\n            e += 'Deals ' + numberFormatter.format(effect.amount) + 'x ATK in damage';\n            break;\n          case 'fixed':\n            e += 'Deals ' + numberFormatter.format(effect.amount) + 'x ATK in damage';\n            break;\n          case 'cut':\n            e += numberFormatter.format(effect.amount) + '% health cut';\n            break;\n          default:\n            e += 'TODO:  ' + JSON.stringify(effect);\n        }\n        break;\n      case 'recharge':\n        switch (effect.type){\n          case 'RCV':\n            e += 'Restores ' + numberFormatter.format(effect.amount) + 'x RCV of HP';\n            break;\n          case 'percentage':\n            e += 'Restores ' + numberFormatter.format(effect.amount) + '% of HP';\n            break;\n          case 'fixed':\n            e += 'Restores ' + numberFormatter.format(effect.amount) + ' fixed HP';\n            break;\n          case 'Special CT':\n            e += 'Reduces ' + numberFormatter.format(effect.amount) + '% of ' + effect.type;\n            break;\n          default:\n            e += 'TODO:  ' + JSON.stringify(effect);\n        }\n        break;\n      case 'hinderance':\n        e += effect.chance + '% chance to ' + this.arrayToString(effect.attributes);\n        break;\n      case 'boon':\n        e += ('chance' in effect ? effect.chance + '% chance to ' : '') + ('Provoke' === this.arrayToString(effect.attributes) ? 'Provoke enemies' : 'reduce ' + this.arrayToString(effect.attributes));\n        break;\n      case 'penalty':\n        const tmpStr = this.arrayToString(effect.attributes);\n        if (tmpStr === 'HP' && 'amount' in effect) {\n          e += numberFormatter.format(effect.amount) + '% health cut';\n        }\n        else if ('level' in effect) {\n          e += 'Inflicts Lv.' + numberFormatter.format(effect.level) + ' ' + this.arrayToString(effect.attributes) + ' down penalty';\n }\n        else {\n          e += effect.chance + '% chance to ' + this.arrayToString(effect.attributes);\n }\n        break;\n      default:\n        e += 'UNKNOWN EFFECT ' + JSON.stringify(effect);\n        break;\n    }\n    e += this.targetToString(effect.targeting) + this.rangeToString(effect.range)\n         + ('duration' in effect  ? ' for ' + numberFormatter.format(effect.duration) + 's' : '') + '.';\n    e += '</li>';\n    return e;\n  }\n\n  arrayToString(array: any): string {\n    const tmpStr = listFormatter.format(array);\n    return tmpStr;\n  }\n\n  conditionToString(condition): string {\n    if (!condition) { return ''; }\n\n    switch (condition.type){\n      case 'stat':\n        return 'When ' + condition.stat + ' is ' + condition.comparator + ' ' + condition.count + '%, ';\n      case 'time':\n        switch (condition.comparator){\n          case 'first':\n            return 'For the first ' + condition.count + ' seconds, ';\n          case 'after':\n            return 'After the first ' + condition.count + ' seconds, ';\n          case 'remaining':\n            return 'For the last ' + condition.count + ' seconds, ';\n          default:\n            return 'UNKNOWN TIME CONDITION ' + JSON.stringify(condition);\n        }\n      case 'crew':\n      case 'enemies':\n        return 'When ' + condition.type + ' count is ' + condition.count + ' or ' + condition.comparator + ', ';\n      case 'trigger':\n        return 'When this unit does a ' + condition.stat + ' (limit ' + condition.count + '), ';\n      default:\n        return 'UNKNOWN CONDITION ' + JSON.stringify(condition);\n    }\n  }\n\n  rangeToString(range): string {\n    if (!range) { return ''; }\n    return ' in a ' + range.size + ', ' + range.direction + ' range';\n  }\n\n  targetToString(target): string {\n    if (!target) { return ''; }\n    let targetStr = this.arrayToString(target.targets);\n    if (targetStr === 'crew') { targetStr = 'crew member(s)'; }\n    if (targetStr === 'enemies') {\n      if (!target.count) {\n        targetStr = 'all enemies';\n      }\n      else if (target.count === 1) {\n        targetStr = 'enemy';\n }\n    }\n    return ' to ' + ('count' in target ? target.count + ' ' : '') + targetStr\n       + ('stat' in target ? ' with the ' + target.priority + ' ' + target.stat : '');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decorate'\n})\nexport class DecoratePipe implements PipeTransform {\n\n  transform(s: string): string {\n    if (s === null || s === ''){\n      return s;\n    }\n    return s.replace(/\\[?STR\\]?/, this.getImageString('filter_attribute_power'))\n            .replace(/\\[?DEX\\]?/, this.getImageString('filter_attribute_technical'))\n            .replace(/\\[?QCK\\]?/, this.getImageString('filter_attribute_speed'))\n            .replace(/\\[?PSY\\]?/, this.getImageString('filter_attribute_heart'))\n            .replace(/\\[?INT\\]?/, this.getImageString('filter_attribute_intellect'))\n            .replace(/\\[?DUAL\\]?/, this.getImageString('filter_attribute_multiplecharacter'))\n            ;\n    }\n\n  getImageString(s: string): string\n  {\n    return '<img src=\"assets/images/' + s + '.png\" width=\"auto\" height=\"30px\"/>';\n  }\n}\n","import { Component, OnInit, Injectable } from '@angular/core';\nimport { UnitTableDataSource } from '../unit-table/unit-table-datasource';\nimport { Unit, Effect } from '../model/rumble';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.css']\n})\nexport class FiltersComponent implements OnInit {\n\n  statType = 'RAW';\n  statBaseValue = 'LEVEL';\n  hideBaseForms = 'true';\n  type = '';\n  class = '';\n  style = '';\n  buffs = '';\n  debuffs = '';\n  damage = '';\n  recharge = '';\n  boons = '';\n  hinderances = '';\n\n  constructor(public dataService: UnitTableDataSource) { }\n\n  ngOnInit(): void {\n  }\n\n  handleFormChange(formId: any): void{\n    // this.dataService.statBaseSubject.next(formId.form.controls.statBaseValue.value);\n    // this.dataService.statTypeSubject.next(formId.form.controls.statType.value);\n    this.dataService.filterChainSubject.next(this.computeFilterChain(formId.form.controls));\n    this.dataService.filterData();\n  }\n\n  computeFilterChain(formFields: any): ((unit: Unit) => boolean ) [] {\n    const filterChain: ((unit: Unit) => boolean ) [] = [];\n    if (formFields.hideBaseForms.value === 'true')\n    {\n      filterChain.push(unit => !unit.isBaseForm);\n    }\n    if ( Array.isArray(formFields.type.value) && formFields.type.value.length){\n      filterChain.push(unit => formFields.type.value.includes(unit.stats.type));\n    }\n    if ( Array.isArray(formFields.class.value) && formFields.class.value.length){\n      filterChain.push(unit => formFields.class.value.includes(unit.stats.class1) || formFields.class.value.includes(unit.stats.class2));\n    }\n    if ( Array.isArray(formFields.style.value) && formFields.style.value.length){\n      filterChain.push(unit => formFields.style.value.includes(unit.stats.rumbleType)); // rename this later\n    }\n    if ( Array.isArray(formFields.buffs.value) && formFields.buffs.value.length){\n      filterChain.push(this.unitFunc('buff', effect => effect.attributes\n        .some(attribute => formFields.buffs.value.includes(attribute))));\n    }\n    if ( Array.isArray(formFields.debuffs.value) && formFields.debuffs.value.length){\n      filterChain.push(this.unitFunc('debuff', effect => effect.attributes\n        .some(attribute => formFields.debuffs.value.includes(attribute))));\n    }\n    if ( Array.isArray(formFields.damage.value) && formFields.damage.value.length){\n      filterChain.push(this.unitFunc('damage',\n                                     effect => formFields.damage.value.includes(effect.type)));\n    }\n    if ( Array.isArray(formFields.recharge.value) && formFields.recharge.value.length){\n      filterChain.push(this.unitFunc('recharge',\n                                     effect => formFields.recharge.value.includes(effect.type)));\n    }\n    if ( Array.isArray(formFields.boons.value) && formFields.boons.value.length){\n      filterChain.push(this.unitFunc('boon', effect => effect.attributes\n        .some(attribute => formFields.boons.value.includes(attribute))));\n      }\n    if ( Array.isArray(formFields.hinderances.value) && formFields.hinderances.value.length){\n        filterChain.push(this.unitFunc('hinderance', effect => effect.attributes\n          .some(attribute => formFields.hinderances.value.includes(attribute))));\n        }\n    return filterChain;\n  }\n\n  unitFunc(effectType: string, effectFunc: ((effect: Effect) => boolean)): ((unit: Unit) => boolean ) {\n\n      return unit => unit.lvl5Ability\n        .some(effect => effect.effect === effectType && effectFunc(effect))\n        || unit.lvl10Special\n          .some(effect => effect.effect === effectType && effectFunc(effect));\n  }\n\n}\n","<h1>Filters</h1>\n<form #filterForm=\"ngForm\" (ngSubmit)=\"handleFormChange(filterForm)\">\n  <!--\n  <mat-card>\n    <mat-card-title>Base Data Sources</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <p>\n        <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\" value=\"RAW\" name=\"statType\" [(ngModel)]=\"statType\">\n          <mat-button-toggle value=\"RAW\"  matTooltip=\"RAW\" selected>Raw</mat-button-toggle>\n          <mat-button-toggle value=\"COMPUTED\"  matTooltip=\"COMPUTED\">Computed</mat-button-toggle>\n        </mat-button-toggle-group>\n      </p>\n      <p>\n        <mat-form-field appearance=\"fill\" [(ngModel)]=\"statBaseValue\" name=\"statBaseValue\">\n          <mat-label>Base Stat Value:</mat-label>\n          <mat-select>\n            <mat-option value=\"LEVEL\">Max Level</mat-option>\n            <mat-option value=\"CC\">Max Level + 300 CC</mat-option>\n            <mat-option value=\"LB\">Max Level, 300 CC, & LB Rainbowed</mat-option>\n            <mat-option value=\"LBPLUS\">Max Level, 300 CC, & LB+ Rainbowed</mat-option>\n            <mat-option value=\"CL\">Character Log (Custom Values)</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </p>\n    </mat-card-actions>\n  </mat-card>\n-->\n<!--  <mat-slide-toggle value=\"hideBaseForms\">Hide Base Forms</mat-slide-toggle>-->\n  <mat-card>\n    <mat-card-title>Hide Base Forms</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group aria-label=\"Hide Base Forms\" [(ngModel)]=\"hideBaseForms\" name=\"hideBaseForms\" [value]=\"hideBaseForms\" (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"true\"  matTooltip=\"Hide Base Forms\">Hide</mat-button-toggle>\n        <mat-button-toggle value=\"false\"  matTooltip=\"Show Base Forms\">Show</mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n  <mat-divider [inset]=\"true\"></mat-divider>\n  <mat-card>\n    <mat-card-title>Type</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group fxLayout=\"wrap\" aria-label=\"Type Filter\" [(ngModel)]=\"type\" name=\"type\" multiple (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"STR\"  matTooltip=\"STR\"><img src=\"assets/images/filter_attribute_power.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"DEX\"  matTooltip=\"DEX\"><img src=\"assets/images/filter_attribute_technical.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"QCK\"  matTooltip=\"QCK\"><img src=\"assets/images/filter_attribute_speed.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"PSY\"  matTooltip=\"PSY\"><img src=\"assets/images/filter_attribute_heart.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"INT\"  matTooltip=\"INT\"><img src=\"assets/images/filter_attribute_intellect.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"DUAL\"  matTooltip=\"DUAL\"><img src=\"assets/images/filter_attribute_multiplecharacter.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n  <mat-card>\n    <mat-card-title>Class</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group fxLayout=\"row wrap\" aria-label=\"Class Filter\" [(ngModel)]=\"class\" name=\"class\" multiple (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"Fighter\"  matTooltip=\"Fighter\"><img src=\"assets/images/filter_type_icn_1.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Slasher\"  matTooltip=\"Slasher\"><img src=\"assets/images/filter_type_icn_2.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Striker\"  matTooltip=\"Striker\"><img src=\"assets/images/filter_type_icn_3.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Shooter\"  matTooltip=\"Shooter\"><img src=\"assets/images/filter_type_icn_4.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Free Spirit\"  matTooltip=\"Free Spirit\"><img src=\"assets/images/filter_type_icn_5.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Driven\"  matTooltip=\"Driven\"><img src=\"assets/images/filter_type_icn_6.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Cerebral\"  matTooltip=\"Cerebral\"><img src=\"assets/images/filter_type_icn_7.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Powerhouse\"  matTooltip=\"Powerhouse\"><img src=\"assets/images/filter_type_icn_8.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n  <mat-card>\n    <mat-card-title>Style</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group fxLayout=\"row wrap\" aria-label=\"Style Filter\" [(ngModel)]=\"style\" name=\"style\" multiple (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"ATK\"  matTooltip=\"ATK\"><img src=\"assets/images/filter_style_icon_01.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"DEF\"  matTooltip=\"DEF\"><img src=\"assets/images/filter_style_icon_02.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"RCV\"  matTooltip=\"RCV\"><img src=\"assets/images/filter_style_icon_03.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"SPT\"  matTooltip=\"SPT\"><img src=\"assets/images/filter_style_icon_04.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"DBF\"  matTooltip=\"DBF\"><img src=\"assets/images/filter_style_icon_05.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-divider [inset]=\"true\"></mat-divider>\n  <mat-card>\n    <mat-card-title>Buffs</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group fxLayout=\"row wrap\" aria-label=\"Buff Filter\" [(ngModel)]=\"buffs\" name=\"buffs\" multiple (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"ATK\"  matTooltip=\"ATK\"><img src=\"assets/images/pirates_arena_attack_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"HP\"  matTooltip=\"HP\"><img src=\"assets/images/pirates_arena_strength_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"RCV\"  matTooltip=\"RCV\"><img src=\"assets/images/pirates_arena_cure_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"DEF\"  matTooltip=\"DEF\"><img src=\"assets/images/pirates_arena_defence_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"SPD\"  matTooltip=\"SPD\"><img src=\"assets/images/pirates_arena_speed_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Critical Hit\"  matTooltip=\"Critical Hit\"><img src=\"assets/images/pirates_arena_critical_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Guard\"  matTooltip=\"Guard\"><img src=\"assets/images/pirates_arena_guard_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Accuracy\"  matTooltip=\"Accuracy\"><img src=\"assets/images/pirates_arena_miss_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Blow Away\"  matTooltip=\"Blow Away\"><img src=\"assets/images/pirates_arena_KnockBack_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Special CT\"  matTooltip=\"Special CT\"><img src=\"assets/images/pirates_arena_SP_speed_up.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n  <mat-card>\n    <mat-card-title>Debuffs</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group fxLayout=\"row wrap\" aria-label=\"Debuff Filter\" [(ngModel)]=\"debuffs\" name=\"debuffs\" multiple (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"ATK\"  matTooltip=\"ATK\"><img src=\"assets/images/pirates_arena_attack_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"HP\"  matTooltip=\"HP\"><img src=\"assets/images/pirates_arena_strength_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"RCV\"  matTooltip=\"RCV\"><img src=\"assets/images/pirates_arena_cure_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"DEF\"  matTooltip=\"DEF\"><img src=\"assets/images/pirates_arena_defence_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"SPD\"  matTooltip=\"SPD\"><img src=\"assets/images/pirates_arena_speed_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Critical Hit\"  matTooltip=\"Critical Hit\"><img src=\"assets/images/pirates_arena_critical_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Guard\"  matTooltip=\"Guard\"><img src=\"assets/images/pirates_arena_guard_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Accuracy\"  matTooltip=\"Accuracy\"><img src=\"assets/images/pirates_arena_miss_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Blow Away\"  matTooltip=\"Blow Away\"><img src=\"assets/images/pirates_arena_KnockBack_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Special CT\"  matTooltip=\"Special CT\"><img src=\"assets/images/pirates_arena_SP_speed_down.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card>\n    <mat-card-title>Damage Dealer</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group fxLayout=\"row wrap\" aria-label=\"Boon Filter\" [(ngModel)]=\"damage\" name=\"damage\" multiple (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"atk\"  matTooltip=\"ATK stat based damage\">ATK Stat</mat-button-toggle>\n        <mat-button-toggle value=\"fixed\"  matTooltip=\"Fixed damage amount\">Fixed Damage</mat-button-toggle>\n        <mat-button-toggle value=\"cut\"  matTooltip=\"Percentage health cut\">Percent Cut</mat-button-toggle>\n        <mat-button-toggle value=\"time\"  matTooltip=\"Damage over time\"><img src=\"assets/images/pirates_arena_effect_icon_continue_damage.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card>\n    <mat-card-title>Restorative</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group fxLayout=\"row wrap\" aria-label=\"Boon Filter\" [(ngModel)]=\"recharge\" name=\"recharge\" multiple (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"RCV\"  matTooltip=\"RCV stat based healing\">RCV Stat</mat-button-toggle>\n        <mat-button-toggle value=\"fixed\"  matTooltip=\"Fixed recovery amount\">Fixed Heal</mat-button-toggle>\n        <mat-button-toggle value=\"percentage\"  matTooltip=\"Percentage healing\">Percent Heal</mat-button-toggle>\n        <mat-button-toggle value=\"Special CT\"  matTooltip=\"Charge a percentage of specials\"><img src=\"assets/images/pirates_arena_effect_icon_special_cure.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card>\n    <mat-card-title>Boons</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group fxLayout=\"row wrap\" aria-label=\"Boon Filter\" [(ngModel)]=\"boons\" name=\"boons\" multiple (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"Action Bind\"  matTooltip=\"Action Bind\"><img src=\"assets/images/pirates_arena_effect_icon_action_cancel.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Silence\"  matTooltip=\"Silence, aka Special Bind\"><img src=\"assets/images/pirates_arena_effect_icon_special_cancel.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Paralysis\"  matTooltip=\"Paralysis\"><img src=\"assets/images/pirates_arena_effect_icon_paralysis.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Provoke\"  matTooltip=\"Provoke\"><img src=\"assets/images/pirates_arena_effect_icon_taunt.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card>\n    <mat-card-title>Hindrances</mat-card-title>\n    <mat-card-actions align=\"start\">\n      <mat-button-toggle-group fxLayout=\"row wrap\" aria-label=\"Hindrance Filter\" [(ngModel)]=\"hinderances\" name=\"hinderances\" multiple (change)=\"handleFormChange(filterForm)\">\n        <mat-button-toggle value=\"Action Bind\"  matTooltip=\"Action Bind\"><img src=\"assets/images/pirates_arena_effect_icon_action_cancel.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Silence\"  matTooltip=\"Silence, aka Special Bind\"><img src=\"assets/images/pirates_arena_effect_icon_special_cancel.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n        <mat-button-toggle value=\"Paralysis\"  matTooltip=\"Paralysis\"><img src=\"assets/images/pirates_arena_effect_icon_paralysis.png\" width=\"48\" height=\"48\"/></mat-button-toggle>\n      </mat-button-toggle-group>\n    </mat-card-actions>\n  </mat-card>\n</form>\n<div class=\"warning\"><h2>NOTE: This site pulls from <a href=\"http://optc-db.github.io/\">http://optc-db.github.io/</a>, which is currently missing some pirate rumble data.</h2></div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}